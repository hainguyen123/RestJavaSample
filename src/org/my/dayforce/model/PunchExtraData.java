/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;
import org.my.dayforce.model.PunchLaborMetric;

/**
 * PunchExtraData
 */

public class PunchExtraData {
  @SerializedName("DocketXRefCode")
  private String docketXRefCode = null;

  @SerializedName("ProjectXRefCode")
  private String projectXRefCode = null;

  @SerializedName("PositionXRefCode")
  private String positionXRefCode = null;

  @SerializedName("LocationXRefCode")
  private String locationXRefCode = null;

  @SerializedName("Quantity")
  private Double quantity = null;

  @SerializedName("MealWaiver")
  private String mealWaiver = null;

  @SerializedName("BreakAttestation")
  private Boolean breakAttestation = null;

  @SerializedName("BioFailure")
  private Boolean bioFailure = null;

  @SerializedName("FaceVerificationFailure")
  private Boolean faceVerificationFailure = null;

  @SerializedName("LaborMetrics")
  private List<PunchLaborMetric> laborMetrics = new ArrayList<PunchLaborMetric>();

  @SerializedName("DocketClockTransferCode")
  private String docketClockTransferCode = null;

  @SerializedName("ProjectClockTransferCode")
  private String projectClockTransferCode = null;

  @SerializedName("PositionClockTransferCode")
  private String positionClockTransferCode = null;

  @SerializedName("LocationClockTransferCode")
  private String locationClockTransferCode = null;

  public PunchExtraData docketXRefCode(String docketXRefCode) {
    this.docketXRefCode = docketXRefCode;
    return this;
  }

   /**
   * Get docketXRefCode
   * @return docketXRefCode
  **/
 
  public String getDocketXRefCode() {
    return docketXRefCode;
  }

  public void setDocketXRefCode(String docketXRefCode) {
    this.docketXRefCode = docketXRefCode;
  }

  public PunchExtraData projectXRefCode(String projectXRefCode) {
    this.projectXRefCode = projectXRefCode;
    return this;
  }

   /**
   * Get projectXRefCode
   * @return projectXRefCode
  **/
 
  public String getProjectXRefCode() {
    return projectXRefCode;
  }

  public void setProjectXRefCode(String projectXRefCode) {
    this.projectXRefCode = projectXRefCode;
  }

  public PunchExtraData positionXRefCode(String positionXRefCode) {
    this.positionXRefCode = positionXRefCode;
    return this;
  }

   /**
   * Get positionXRefCode
   * @return positionXRefCode
  **/
 
  public String getPositionXRefCode() {
    return positionXRefCode;
  }

  public void setPositionXRefCode(String positionXRefCode) {
    this.positionXRefCode = positionXRefCode;
  }

  public PunchExtraData locationXRefCode(String locationXRefCode) {
    this.locationXRefCode = locationXRefCode;
    return this;
  }

   /**
   * Get locationXRefCode
   * @return locationXRefCode
  **/
 
  public String getLocationXRefCode() {
    return locationXRefCode;
  }

  public void setLocationXRefCode(String locationXRefCode) {
    this.locationXRefCode = locationXRefCode;
  }

  public PunchExtraData quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
 
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public PunchExtraData mealWaiver(String mealWaiver) {
    this.mealWaiver = mealWaiver;
    return this;
  }

   /**
   * Get mealWaiver
   * @return mealWaiver
  **/
 
  public String getMealWaiver() {
    return mealWaiver;
  }

  public void setMealWaiver(String mealWaiver) {
    this.mealWaiver = mealWaiver;
  }

  public PunchExtraData breakAttestation(Boolean breakAttestation) {
    this.breakAttestation = breakAttestation;
    return this;
  }

   /**
   * Get breakAttestation
   * @return breakAttestation
  **/
 
  public Boolean getBreakAttestation() {
    return breakAttestation;
  }

  public void setBreakAttestation(Boolean breakAttestation) {
    this.breakAttestation = breakAttestation;
  }

  public PunchExtraData bioFailure(Boolean bioFailure) {
    this.bioFailure = bioFailure;
    return this;
  }

   /**
   * Get bioFailure
   * @return bioFailure
  **/
 
  public Boolean getBioFailure() {
    return bioFailure;
  }

  public void setBioFailure(Boolean bioFailure) {
    this.bioFailure = bioFailure;
  }

  public PunchExtraData faceVerificationFailure(Boolean faceVerificationFailure) {
    this.faceVerificationFailure = faceVerificationFailure;
    return this;
  }

   /**
   * Get faceVerificationFailure
   * @return faceVerificationFailure
  **/
 
  public Boolean getFaceVerificationFailure() {
    return faceVerificationFailure;
  }

  public void setFaceVerificationFailure(Boolean faceVerificationFailure) {
    this.faceVerificationFailure = faceVerificationFailure;
  }

  public PunchExtraData laborMetrics(List<PunchLaborMetric> laborMetrics) {
    this.laborMetrics = laborMetrics;
    return this;
  }

  public PunchExtraData addLaborMetricsItem(PunchLaborMetric laborMetricsItem) {
    this.laborMetrics.add(laborMetricsItem);
    return this;
  }

   /**
   * Get laborMetrics
   * @return laborMetrics
  **/
 
  public List<PunchLaborMetric> getLaborMetrics() {
    return laborMetrics;
  }

  public void setLaborMetrics(List<PunchLaborMetric> laborMetrics) {
    this.laborMetrics = laborMetrics;
  }

  public PunchExtraData docketClockTransferCode(String docketClockTransferCode) {
    this.docketClockTransferCode = docketClockTransferCode;
    return this;
  }

   /**
   * Get docketClockTransferCode
   * @return docketClockTransferCode
  **/
 
  public String getDocketClockTransferCode() {
    return docketClockTransferCode;
  }

  public void setDocketClockTransferCode(String docketClockTransferCode) {
    this.docketClockTransferCode = docketClockTransferCode;
  }

  public PunchExtraData projectClockTransferCode(String projectClockTransferCode) {
    this.projectClockTransferCode = projectClockTransferCode;
    return this;
  }

   /**
   * Get projectClockTransferCode
   * @return projectClockTransferCode
  **/
 
  public String getProjectClockTransferCode() {
    return projectClockTransferCode;
  }

  public void setProjectClockTransferCode(String projectClockTransferCode) {
    this.projectClockTransferCode = projectClockTransferCode;
  }

  public PunchExtraData positionClockTransferCode(String positionClockTransferCode) {
    this.positionClockTransferCode = positionClockTransferCode;
    return this;
  }

   /**
   * Get positionClockTransferCode
   * @return positionClockTransferCode
  **/
 
  public String getPositionClockTransferCode() {
    return positionClockTransferCode;
  }

  public void setPositionClockTransferCode(String positionClockTransferCode) {
    this.positionClockTransferCode = positionClockTransferCode;
  }

  public PunchExtraData locationClockTransferCode(String locationClockTransferCode) {
    this.locationClockTransferCode = locationClockTransferCode;
    return this;
  }

   /**
   * Get locationClockTransferCode
   * @return locationClockTransferCode
  **/
 
  public String getLocationClockTransferCode() {
    return locationClockTransferCode;
  }

  public void setLocationClockTransferCode(String locationClockTransferCode) {
    this.locationClockTransferCode = locationClockTransferCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PunchExtraData punchExtraData = (PunchExtraData) o;
    return Objects.equals(this.docketXRefCode, punchExtraData.docketXRefCode) &&
        Objects.equals(this.projectXRefCode, punchExtraData.projectXRefCode) &&
        Objects.equals(this.positionXRefCode, punchExtraData.positionXRefCode) &&
        Objects.equals(this.locationXRefCode, punchExtraData.locationXRefCode) &&
        Objects.equals(this.quantity, punchExtraData.quantity) &&
        Objects.equals(this.mealWaiver, punchExtraData.mealWaiver) &&
        Objects.equals(this.breakAttestation, punchExtraData.breakAttestation) &&
        Objects.equals(this.bioFailure, punchExtraData.bioFailure) &&
        Objects.equals(this.faceVerificationFailure, punchExtraData.faceVerificationFailure) &&
        Objects.equals(this.laborMetrics, punchExtraData.laborMetrics) &&
        Objects.equals(this.docketClockTransferCode, punchExtraData.docketClockTransferCode) &&
        Objects.equals(this.projectClockTransferCode, punchExtraData.projectClockTransferCode) &&
        Objects.equals(this.positionClockTransferCode, punchExtraData.positionClockTransferCode) &&
        Objects.equals(this.locationClockTransferCode, punchExtraData.locationClockTransferCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docketXRefCode, projectXRefCode, positionXRefCode, locationXRefCode, quantity, mealWaiver, breakAttestation, bioFailure, faceVerificationFailure, laborMetrics, docketClockTransferCode, projectClockTransferCode, positionClockTransferCode, locationClockTransferCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PunchExtraData {\n");
    
    sb.append("    docketXRefCode: ").append(toIndentedString(docketXRefCode)).append("\n");
    sb.append("    projectXRefCode: ").append(toIndentedString(projectXRefCode)).append("\n");
    sb.append("    positionXRefCode: ").append(toIndentedString(positionXRefCode)).append("\n");
    sb.append("    locationXRefCode: ").append(toIndentedString(locationXRefCode)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    mealWaiver: ").append(toIndentedString(mealWaiver)).append("\n");
    sb.append("    breakAttestation: ").append(toIndentedString(breakAttestation)).append("\n");
    sb.append("    bioFailure: ").append(toIndentedString(bioFailure)).append("\n");
    sb.append("    faceVerificationFailure: ").append(toIndentedString(faceVerificationFailure)).append("\n");
    sb.append("    laborMetrics: ").append(toIndentedString(laborMetrics)).append("\n");
    sb.append("    docketClockTransferCode: ").append(toIndentedString(docketClockTransferCode)).append("\n");
    sb.append("    projectClockTransferCode: ").append(toIndentedString(projectClockTransferCode)).append("\n");
    sb.append("    positionClockTransferCode: ").append(toIndentedString(positionClockTransferCode)).append("\n");
    sb.append("    locationClockTransferCode: ").append(toIndentedString(locationClockTransferCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

