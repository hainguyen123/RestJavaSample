/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import org.my.dayforce.model.LaborCostTimeInterval;
import org.my.dayforce.model.LaborCostTotalResult;

/**
 * LaborCostResult
 */

public class LaborCostResult {
  @SerializedName("LocationXRefCode")
  private String locationXRefCode = null;

  @SerializedName("CalendarDate")
  private DateTime calendarDate = null;

  @SerializedName("Totals")
  private LaborCostTotalResult totals = null;

  @SerializedName("Intervals")
  private List<LaborCostTimeInterval> intervals = new ArrayList<LaborCostTimeInterval>();

  public LaborCostResult locationXRefCode(String locationXRefCode) {
    this.locationXRefCode = locationXRefCode;
    return this;
  }

   /**
   * Get locationXRefCode
   * @return locationXRefCode
  **/
 
  public String getLocationXRefCode() {
    return locationXRefCode;
  }

  public void setLocationXRefCode(String locationXRefCode) {
    this.locationXRefCode = locationXRefCode;
  }

  public LaborCostResult calendarDate(DateTime calendarDate) {
    this.calendarDate = calendarDate;
    return this;
  }

   /**
   * Get calendarDate
   * @return calendarDate
  **/
 
  public DateTime getCalendarDate() {
    return calendarDate;
  }

  public void setCalendarDate(DateTime calendarDate) {
    this.calendarDate = calendarDate;
  }

  public LaborCostResult totals(LaborCostTotalResult totals) {
    this.totals = totals;
    return this;
  }

   /**
   * Get totals
   * @return totals
  **/
 
  public LaborCostTotalResult getTotals() {
    return totals;
  }

  public void setTotals(LaborCostTotalResult totals) {
    this.totals = totals;
  }

  public LaborCostResult intervals(List<LaborCostTimeInterval> intervals) {
    this.intervals = intervals;
    return this;
  }

  public LaborCostResult addIntervalsItem(LaborCostTimeInterval intervalsItem) {
    this.intervals.add(intervalsItem);
    return this;
  }

   /**
   * Get intervals
   * @return intervals
  **/
 
  public List<LaborCostTimeInterval> getIntervals() {
    return intervals;
  }

  public void setIntervals(List<LaborCostTimeInterval> intervals) {
    this.intervals = intervals;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LaborCostResult laborCostResult = (LaborCostResult) o;
    return Objects.equals(this.locationXRefCode, laborCostResult.locationXRefCode) &&
        Objects.equals(this.calendarDate, laborCostResult.calendarDate) &&
        Objects.equals(this.totals, laborCostResult.totals) &&
        Objects.equals(this.intervals, laborCostResult.intervals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationXRefCode, calendarDate, totals, intervals);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LaborCostResult {\n");
    
    sb.append("    locationXRefCode: ").append(toIndentedString(locationXRefCode)).append("\n");
    sb.append("    calendarDate: ").append(toIndentedString(calendarDate)).append("\n");
    sb.append("    totals: ").append(toIndentedString(totals)).append("\n");
    sb.append("    intervals: ").append(toIndentedString(intervals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

