/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.Earning;
import org.my.dayforce.model.ElectionSchedule;
import org.my.dayforce.model.EmployeeEarningLimitCollection;
import org.my.dayforce.model.EmployeeEarningParameterCollection;
import org.my.dayforce.model.Location;
import org.my.dayforce.model.PayGroup;
import org.my.dayforce.model.Position;

/**
 * EmployeeEarning
 */

public class EmployeeEarning {
  @SerializedName("ContinuePaymentOnStatutoryPay")
  private Boolean continuePaymentOnStatutoryPay = null;

  @SerializedName("IsOptOut")
  private Integer isOptOut = null;

  @SerializedName("Earning")
  private Earning earning = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("ElectionSchedule")
  private ElectionSchedule electionSchedule = null;

  @SerializedName("ElectionStartPayGroup")
  private PayGroup electionStartPayGroup = null;

  @SerializedName("ElectionStartPayPeriodStartDate")
  private DateTime electionStartPayPeriodStartDate = null;

  @SerializedName("IsBlocked")
  private Boolean isBlocked = null;

  @SerializedName("LimitAmount")
  private Double limitAmount = null;

  @SerializedName("LimitPercent")
  private Double limitPercent = null;

  @SerializedName("Location")
  private Location location = null;

  @SerializedName("Position")
  private Position position = null;

  @SerializedName("EmployeeEarningParameters")
  private EmployeeEarningParameterCollection employeeEarningParameters = null;

  @SerializedName("EmployeeEarningLimits")
  private EmployeeEarningLimitCollection employeeEarningLimits = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeEarning continuePaymentOnStatutoryPay(Boolean continuePaymentOnStatutoryPay) {
    this.continuePaymentOnStatutoryPay = continuePaymentOnStatutoryPay;
    return this;
  }

   /**
   * Get continuePaymentOnStatutoryPay
   * @return continuePaymentOnStatutoryPay
  **/
 
  public Boolean getContinuePaymentOnStatutoryPay() {
    return continuePaymentOnStatutoryPay;
  }

  public void setContinuePaymentOnStatutoryPay(Boolean continuePaymentOnStatutoryPay) {
    this.continuePaymentOnStatutoryPay = continuePaymentOnStatutoryPay;
  }

  public EmployeeEarning isOptOut(Integer isOptOut) {
    this.isOptOut = isOptOut;
    return this;
  }

   /**
   * Get isOptOut
   * @return isOptOut
  **/
 
  public Integer getIsOptOut() {
    return isOptOut;
  }

  public void setIsOptOut(Integer isOptOut) {
    this.isOptOut = isOptOut;
  }

  public EmployeeEarning earning(Earning earning) {
    this.earning = earning;
    return this;
  }

   /**
   * Get earning
   * @return earning
  **/
 
  public Earning getEarning() {
    return earning;
  }

  public void setEarning(Earning earning) {
    this.earning = earning;
  }

  public EmployeeEarning effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeEarning effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeEarning electionSchedule(ElectionSchedule electionSchedule) {
    this.electionSchedule = electionSchedule;
    return this;
  }

   /**
   * Get electionSchedule
   * @return electionSchedule
  **/
 
  public ElectionSchedule getElectionSchedule() {
    return electionSchedule;
  }

  public void setElectionSchedule(ElectionSchedule electionSchedule) {
    this.electionSchedule = electionSchedule;
  }

  public EmployeeEarning electionStartPayGroup(PayGroup electionStartPayGroup) {
    this.electionStartPayGroup = electionStartPayGroup;
    return this;
  }

   /**
   * Get electionStartPayGroup
   * @return electionStartPayGroup
  **/
 
  public PayGroup getElectionStartPayGroup() {
    return electionStartPayGroup;
  }

  public void setElectionStartPayGroup(PayGroup electionStartPayGroup) {
    this.electionStartPayGroup = electionStartPayGroup;
  }

  public EmployeeEarning electionStartPayPeriodStartDate(DateTime electionStartPayPeriodStartDate) {
    this.electionStartPayPeriodStartDate = electionStartPayPeriodStartDate;
    return this;
  }

   /**
   * Get electionStartPayPeriodStartDate
   * @return electionStartPayPeriodStartDate
  **/
 
  public DateTime getElectionStartPayPeriodStartDate() {
    return electionStartPayPeriodStartDate;
  }

  public void setElectionStartPayPeriodStartDate(DateTime electionStartPayPeriodStartDate) {
    this.electionStartPayPeriodStartDate = electionStartPayPeriodStartDate;
  }

  public EmployeeEarning isBlocked(Boolean isBlocked) {
    this.isBlocked = isBlocked;
    return this;
  }

   /**
   * Get isBlocked
   * @return isBlocked
  **/
 
  public Boolean getIsBlocked() {
    return isBlocked;
  }

  public void setIsBlocked(Boolean isBlocked) {
    this.isBlocked = isBlocked;
  }

  public EmployeeEarning limitAmount(Double limitAmount) {
    this.limitAmount = limitAmount;
    return this;
  }

   /**
   * Get limitAmount
   * @return limitAmount
  **/
 
  public Double getLimitAmount() {
    return limitAmount;
  }

  public void setLimitAmount(Double limitAmount) {
    this.limitAmount = limitAmount;
  }

  public EmployeeEarning limitPercent(Double limitPercent) {
    this.limitPercent = limitPercent;
    return this;
  }

   /**
   * Get limitPercent
   * @return limitPercent
  **/
 
  public Double getLimitPercent() {
    return limitPercent;
  }

  public void setLimitPercent(Double limitPercent) {
    this.limitPercent = limitPercent;
  }

  public EmployeeEarning location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
 
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public EmployeeEarning position(Position position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
 
  public Position getPosition() {
    return position;
  }

  public void setPosition(Position position) {
    this.position = position;
  }

  public EmployeeEarning employeeEarningParameters(EmployeeEarningParameterCollection employeeEarningParameters) {
    this.employeeEarningParameters = employeeEarningParameters;
    return this;
  }

   /**
   * Get employeeEarningParameters
   * @return employeeEarningParameters
  **/
 
  public EmployeeEarningParameterCollection getEmployeeEarningParameters() {
    return employeeEarningParameters;
  }

  public void setEmployeeEarningParameters(EmployeeEarningParameterCollection employeeEarningParameters) {
    this.employeeEarningParameters = employeeEarningParameters;
  }

  public EmployeeEarning employeeEarningLimits(EmployeeEarningLimitCollection employeeEarningLimits) {
    this.employeeEarningLimits = employeeEarningLimits;
    return this;
  }

   /**
   * Get employeeEarningLimits
   * @return employeeEarningLimits
  **/
 
  public EmployeeEarningLimitCollection getEmployeeEarningLimits() {
    return employeeEarningLimits;
  }

  public void setEmployeeEarningLimits(EmployeeEarningLimitCollection employeeEarningLimits) {
    this.employeeEarningLimits = employeeEarningLimits;
  }

  public EmployeeEarning lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeEarning employeeEarning = (EmployeeEarning) o;
    return Objects.equals(this.continuePaymentOnStatutoryPay, employeeEarning.continuePaymentOnStatutoryPay) &&
        Objects.equals(this.isOptOut, employeeEarning.isOptOut) &&
        Objects.equals(this.earning, employeeEarning.earning) &&
        Objects.equals(this.effectiveEnd, employeeEarning.effectiveEnd) &&
        Objects.equals(this.effectiveStart, employeeEarning.effectiveStart) &&
        Objects.equals(this.electionSchedule, employeeEarning.electionSchedule) &&
        Objects.equals(this.electionStartPayGroup, employeeEarning.electionStartPayGroup) &&
        Objects.equals(this.electionStartPayPeriodStartDate, employeeEarning.electionStartPayPeriodStartDate) &&
        Objects.equals(this.isBlocked, employeeEarning.isBlocked) &&
        Objects.equals(this.limitAmount, employeeEarning.limitAmount) &&
        Objects.equals(this.limitPercent, employeeEarning.limitPercent) &&
        Objects.equals(this.location, employeeEarning.location) &&
        Objects.equals(this.position, employeeEarning.position) &&
        Objects.equals(this.employeeEarningParameters, employeeEarning.employeeEarningParameters) &&
        Objects.equals(this.employeeEarningLimits, employeeEarning.employeeEarningLimits) &&
        Objects.equals(this.lastModifiedTimestamp, employeeEarning.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(continuePaymentOnStatutoryPay, isOptOut, earning, effectiveEnd, effectiveStart, electionSchedule, electionStartPayGroup, electionStartPayPeriodStartDate, isBlocked, limitAmount, limitPercent, location, position, employeeEarningParameters, employeeEarningLimits, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeEarning {\n");
    
    sb.append("    continuePaymentOnStatutoryPay: ").append(toIndentedString(continuePaymentOnStatutoryPay)).append("\n");
    sb.append("    isOptOut: ").append(toIndentedString(isOptOut)).append("\n");
    sb.append("    earning: ").append(toIndentedString(earning)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    electionSchedule: ").append(toIndentedString(electionSchedule)).append("\n");
    sb.append("    electionStartPayGroup: ").append(toIndentedString(electionStartPayGroup)).append("\n");
    sb.append("    electionStartPayPeriodStartDate: ").append(toIndentedString(electionStartPayPeriodStartDate)).append("\n");
    sb.append("    isBlocked: ").append(toIndentedString(isBlocked)).append("\n");
    sb.append("    limitAmount: ").append(toIndentedString(limitAmount)).append("\n");
    sb.append("    limitPercent: ").append(toIndentedString(limitPercent)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    employeeEarningParameters: ").append(toIndentedString(employeeEarningParameters)).append("\n");
    sb.append("    employeeEarningLimits: ").append(toIndentedString(employeeEarningLimits)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

