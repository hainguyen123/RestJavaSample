/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;

/**
 * PerformanceCycle
 */

public class PerformanceCycle {
  @SerializedName("CycleStartDate")
  private DateTime cycleStartDate = null;

  @SerializedName("CycleEndDate")
  private DateTime cycleEndDate = null;

  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("XRefCode")
  private String xrefCode = null;

  @SerializedName("ShortName")
  private String shortName = null;

  @SerializedName("LongName")
  private String longName = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public PerformanceCycle cycleStartDate(DateTime cycleStartDate) {
    this.cycleStartDate = cycleStartDate;
    return this;
  }

   /**
   * Get cycleStartDate
   * @return cycleStartDate
  **/
 
  public DateTime getCycleStartDate() {
    return cycleStartDate;
  }

  public void setCycleStartDate(DateTime cycleStartDate) {
    this.cycleStartDate = cycleStartDate;
  }

  public PerformanceCycle cycleEndDate(DateTime cycleEndDate) {
    this.cycleEndDate = cycleEndDate;
    return this;
  }

   /**
   * Get cycleEndDate
   * @return cycleEndDate
  **/
 
  public DateTime getCycleEndDate() {
    return cycleEndDate;
  }

  public void setCycleEndDate(DateTime cycleEndDate) {
    this.cycleEndDate = cycleEndDate;
  }

  public PerformanceCycle effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public PerformanceCycle effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public PerformanceCycle xrefCode(String xrefCode) {
    this.xrefCode = xrefCode;
    return this;
  }

   /**
   * Get xrefCode
   * @return xrefCode
  **/
 
  public String getXrefCode() {
    return xrefCode;
  }

  public void setXrefCode(String xrefCode) {
    this.xrefCode = xrefCode;
  }

  public PerformanceCycle shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
 
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }

  public PerformanceCycle longName(String longName) {
    this.longName = longName;
    return this;
  }

   /**
   * Get longName
   * @return longName
  **/
 
  public String getLongName() {
    return longName;
  }

  public void setLongName(String longName) {
    this.longName = longName;
  }

  public PerformanceCycle lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceCycle performanceCycle = (PerformanceCycle) o;
    return Objects.equals(this.cycleStartDate, performanceCycle.cycleStartDate) &&
        Objects.equals(this.cycleEndDate, performanceCycle.cycleEndDate) &&
        Objects.equals(this.effectiveStart, performanceCycle.effectiveStart) &&
        Objects.equals(this.effectiveEnd, performanceCycle.effectiveEnd) &&
        Objects.equals(this.xrefCode, performanceCycle.xrefCode) &&
        Objects.equals(this.shortName, performanceCycle.shortName) &&
        Objects.equals(this.longName, performanceCycle.longName) &&
        Objects.equals(this.lastModifiedTimestamp, performanceCycle.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cycleStartDate, cycleEndDate, effectiveStart, effectiveEnd, xrefCode, shortName, longName, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceCycle {\n");
    
    sb.append("    cycleStartDate: ").append(toIndentedString(cycleStartDate)).append("\n");
    sb.append("    cycleEndDate: ").append(toIndentedString(cycleEndDate)).append("\n");
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    xrefCode: ").append(toIndentedString(xrefCode)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    longName: ").append(toIndentedString(longName)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

