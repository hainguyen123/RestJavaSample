/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.EmergencyContactPersonAddressCollection;
import org.my.dayforce.model.EmergencyContactPersonContactCollection;
import org.my.dayforce.model.RelationshipType;

/**
 * EmployeeEmergencyContact
 */

public class EmployeeEmergencyContact {
  @SerializedName("FirstName")
  private String firstName = null;

  @SerializedName("LastName")
  private String lastName = null;

  @SerializedName("MiddleName")
  private String middleName = null;

  @SerializedName("Comment")
  private String comment = null;

  @SerializedName("IsPrimary")
  private Boolean isPrimary = null;

  @SerializedName("Relationship")
  private RelationshipType relationship = null;

  @SerializedName("Addresses")
  private EmergencyContactPersonAddressCollection addresses = null;

  @SerializedName("Contacts")
  private EmergencyContactPersonContactCollection contacts = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeEmergencyContact firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
 
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public EmployeeEmergencyContact lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
 
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public EmployeeEmergencyContact middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
 
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public EmployeeEmergencyContact comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
 
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public EmployeeEmergencyContact isPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
    return this;
  }

   /**
   * Get isPrimary
   * @return isPrimary
  **/
 
  public Boolean getIsPrimary() {
    return isPrimary;
  }

  public void setIsPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
  }

  public EmployeeEmergencyContact relationship(RelationshipType relationship) {
    this.relationship = relationship;
    return this;
  }

   /**
   * Get relationship
   * @return relationship
  **/
 
  public RelationshipType getRelationship() {
    return relationship;
  }

  public void setRelationship(RelationshipType relationship) {
    this.relationship = relationship;
  }

  public EmployeeEmergencyContact addresses(EmergencyContactPersonAddressCollection addresses) {
    this.addresses = addresses;
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
 
  public EmergencyContactPersonAddressCollection getAddresses() {
    return addresses;
  }

  public void setAddresses(EmergencyContactPersonAddressCollection addresses) {
    this.addresses = addresses;
  }

  public EmployeeEmergencyContact contacts(EmergencyContactPersonContactCollection contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
 
  public EmergencyContactPersonContactCollection getContacts() {
    return contacts;
  }

  public void setContacts(EmergencyContactPersonContactCollection contacts) {
    this.contacts = contacts;
  }

  public EmployeeEmergencyContact lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeEmergencyContact employeeEmergencyContact = (EmployeeEmergencyContact) o;
    return Objects.equals(this.firstName, employeeEmergencyContact.firstName) &&
        Objects.equals(this.lastName, employeeEmergencyContact.lastName) &&
        Objects.equals(this.middleName, employeeEmergencyContact.middleName) &&
        Objects.equals(this.comment, employeeEmergencyContact.comment) &&
        Objects.equals(this.isPrimary, employeeEmergencyContact.isPrimary) &&
        Objects.equals(this.relationship, employeeEmergencyContact.relationship) &&
        Objects.equals(this.addresses, employeeEmergencyContact.addresses) &&
        Objects.equals(this.contacts, employeeEmergencyContact.contacts) &&
        Objects.equals(this.lastModifiedTimestamp, employeeEmergencyContact.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, middleName, comment, isPrimary, relationship, addresses, contacts, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeEmergencyContact {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

