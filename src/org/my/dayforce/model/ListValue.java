/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;



/**
 * ListValue
 */

public class ListValue {
  @SerializedName("ListValueId")
  private Integer listValueId = null;

  @SerializedName("Name")
  private String name = null;

  public ListValue listValueId(Integer listValueId) {
    this.listValueId = listValueId;
    return this;
  }

   /**
   * The Id of the list item.  This value would be passed as the parameter value.  Multiple Id's can be passed as a parameter value if comma separated.
   * @return listValueId
  **/
   public Integer getListValueId() {
    return listValueId;
  }

  public void setListValueId(Integer listValueId) {
    this.listValueId = listValueId;
  }

  public ListValue name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name that can be displayed in a list to the user.
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListValue listValue = (ListValue) o;
    return Objects.equals(this.listValueId, listValue.listValueId) &&
        Objects.equals(this.name, listValue.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listValueId, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListValue {\n");
    
    sb.append("    listValueId: ").append(toIndentedString(listValueId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

