/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import org.my.dayforce.model.EmployeePayrollTaxName;

/**
 * EmployeePayrollTax
 */

public class EmployeePayrollTax {
  @SerializedName("TaxAuthority")
  private String taxAuthority = null;

  @SerializedName("TaxType")
  private String taxType = null;

  @SerializedName("Name")
  private EmployeePayrollTaxName name = null;

  @SerializedName("EmployeeTax")
  private Boolean employeeTax = null;

  @SerializedName("EmployerTax")
  private Boolean employerTax = null;

  @SerializedName("LegalEntity")
  private String legalEntity = null;

  @SerializedName("ResidentCode")
  private String residentCode = null;

  @SerializedName("ManuallyAddedTax")
  private Boolean manuallyAddedTax = null;

  @SerializedName("Addresses")
  private List<String> addresses = new ArrayList<String>();

  @SerializedName("TaxAuthorityInstance")
  private String taxAuthorityInstance = null;

  @SerializedName("LegalEntityXrefCode")
  private String legalEntityXrefCode = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeePayrollTax taxAuthority(String taxAuthority) {
    this.taxAuthority = taxAuthority;
    return this;
  }

   /**
   * Get taxAuthority
   * @return taxAuthority
  **/
 
  public String getTaxAuthority() {
    return taxAuthority;
  }

  public void setTaxAuthority(String taxAuthority) {
    this.taxAuthority = taxAuthority;
  }

  public EmployeePayrollTax taxType(String taxType) {
    this.taxType = taxType;
    return this;
  }

   /**
   * Get taxType
   * @return taxType
  **/
 
  public String getTaxType() {
    return taxType;
  }

  public void setTaxType(String taxType) {
    this.taxType = taxType;
  }

  public EmployeePayrollTax name(EmployeePayrollTaxName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
 
  public EmployeePayrollTaxName getName() {
    return name;
  }

  public void setName(EmployeePayrollTaxName name) {
    this.name = name;
  }

  public EmployeePayrollTax employeeTax(Boolean employeeTax) {
    this.employeeTax = employeeTax;
    return this;
  }

   /**
   * Get employeeTax
   * @return employeeTax
  **/
 
  public Boolean getEmployeeTax() {
    return employeeTax;
  }

  public void setEmployeeTax(Boolean employeeTax) {
    this.employeeTax = employeeTax;
  }

  public EmployeePayrollTax employerTax(Boolean employerTax) {
    this.employerTax = employerTax;
    return this;
  }

   /**
   * Get employerTax
   * @return employerTax
  **/
 
  public Boolean getEmployerTax() {
    return employerTax;
  }

  public void setEmployerTax(Boolean employerTax) {
    this.employerTax = employerTax;
  }

  public EmployeePayrollTax legalEntity(String legalEntity) {
    this.legalEntity = legalEntity;
    return this;
  }

   /**
   * Get legalEntity
   * @return legalEntity
  **/
 
  public String getLegalEntity() {
    return legalEntity;
  }

  public void setLegalEntity(String legalEntity) {
    this.legalEntity = legalEntity;
  }

  public EmployeePayrollTax residentCode(String residentCode) {
    this.residentCode = residentCode;
    return this;
  }

   /**
   * Get residentCode
   * @return residentCode
  **/
 
  public String getResidentCode() {
    return residentCode;
  }

  public void setResidentCode(String residentCode) {
    this.residentCode = residentCode;
  }

  public EmployeePayrollTax manuallyAddedTax(Boolean manuallyAddedTax) {
    this.manuallyAddedTax = manuallyAddedTax;
    return this;
  }

   /**
   * Get manuallyAddedTax
   * @return manuallyAddedTax
  **/
 
  public Boolean getManuallyAddedTax() {
    return manuallyAddedTax;
  }

  public void setManuallyAddedTax(Boolean manuallyAddedTax) {
    this.manuallyAddedTax = manuallyAddedTax;
  }

  public EmployeePayrollTax addresses(List<String> addresses) {
    this.addresses = addresses;
    return this;
  }

  public EmployeePayrollTax addAddressesItem(String addressesItem) {
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
 
  public List<String> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<String> addresses) {
    this.addresses = addresses;
  }

  public EmployeePayrollTax taxAuthorityInstance(String taxAuthorityInstance) {
    this.taxAuthorityInstance = taxAuthorityInstance;
    return this;
  }

   /**
   * Get taxAuthorityInstance
   * @return taxAuthorityInstance
  **/
 
  public String getTaxAuthorityInstance() {
    return taxAuthorityInstance;
  }

  public void setTaxAuthorityInstance(String taxAuthorityInstance) {
    this.taxAuthorityInstance = taxAuthorityInstance;
  }

  public EmployeePayrollTax legalEntityXrefCode(String legalEntityXrefCode) {
    this.legalEntityXrefCode = legalEntityXrefCode;
    return this;
  }

   /**
   * Get legalEntityXrefCode
   * @return legalEntityXrefCode
  **/
 
  public String getLegalEntityXrefCode() {
    return legalEntityXrefCode;
  }

  public void setLegalEntityXrefCode(String legalEntityXrefCode) {
    this.legalEntityXrefCode = legalEntityXrefCode;
  }

  public EmployeePayrollTax lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeePayrollTax employeePayrollTax = (EmployeePayrollTax) o;
    return Objects.equals(this.taxAuthority, employeePayrollTax.taxAuthority) &&
        Objects.equals(this.taxType, employeePayrollTax.taxType) &&
        Objects.equals(this.name, employeePayrollTax.name) &&
        Objects.equals(this.employeeTax, employeePayrollTax.employeeTax) &&
        Objects.equals(this.employerTax, employeePayrollTax.employerTax) &&
        Objects.equals(this.legalEntity, employeePayrollTax.legalEntity) &&
        Objects.equals(this.residentCode, employeePayrollTax.residentCode) &&
        Objects.equals(this.manuallyAddedTax, employeePayrollTax.manuallyAddedTax) &&
        Objects.equals(this.addresses, employeePayrollTax.addresses) &&
        Objects.equals(this.taxAuthorityInstance, employeePayrollTax.taxAuthorityInstance) &&
        Objects.equals(this.legalEntityXrefCode, employeePayrollTax.legalEntityXrefCode) &&
        Objects.equals(this.lastModifiedTimestamp, employeePayrollTax.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxAuthority, taxType, name, employeeTax, employerTax, legalEntity, residentCode, manuallyAddedTax, addresses, taxAuthorityInstance, legalEntityXrefCode, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeePayrollTax {\n");
    
    sb.append("    taxAuthority: ").append(toIndentedString(taxAuthority)).append("\n");
    sb.append("    taxType: ").append(toIndentedString(taxType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    employeeTax: ").append(toIndentedString(employeeTax)).append("\n");
    sb.append("    employerTax: ").append(toIndentedString(employerTax)).append("\n");
    sb.append("    legalEntity: ").append(toIndentedString(legalEntity)).append("\n");
    sb.append("    residentCode: ").append(toIndentedString(residentCode)).append("\n");
    sb.append("    manuallyAddedTax: ").append(toIndentedString(manuallyAddedTax)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    taxAuthorityInstance: ").append(toIndentedString(taxAuthorityInstance)).append("\n");
    sb.append("    legalEntityXrefCode: ").append(toIndentedString(legalEntityXrefCode)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

