/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.State;
import org.my.dayforce.model.StateFilingStatus;

/**
 * EmployeeUSStateTax
 */

public class EmployeeUSStateTax {
  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("State")
  private State state = null;

  @SerializedName("FilingStatus")
  private StateFilingStatus filingStatus = null;

  @SerializedName("Allowances")
  private Integer allowances = null;

  @SerializedName("AdditionalAmount")
  private Double additionalAmount = null;

  @SerializedName("DependentAllowances")
  private Integer dependentAllowances = null;

  @SerializedName("PersonalAllowances")
  private Integer personalAllowances = null;

  @SerializedName("AdditionalAllowances")
  private Integer additionalAllowances = null;

  @SerializedName("IsTaxExempt")
  private Boolean isTaxExempt = null;

  @SerializedName("AlternateCalculationCode")
  private String alternateCalculationCode = null;

  @SerializedName("ExemptionAmount")
  private Double exemptionAmount = null;

  @SerializedName("AdditionalTaxPercent")
  private Double additionalTaxPercent = null;

  @SerializedName("AdditionalExemptionAmount")
  private Double additionalExemptionAmount = null;

  @SerializedName("IsLocked")
  private Boolean isLocked = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeUSStateTax effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeUSStateTax effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeUSStateTax state(State state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
 
  public State getState() {
    return state;
  }

  public void setState(State state) {
    this.state = state;
  }

  public EmployeeUSStateTax filingStatus(StateFilingStatus filingStatus) {
    this.filingStatus = filingStatus;
    return this;
  }

   /**
   * Get filingStatus
   * @return filingStatus
  **/
 
  public StateFilingStatus getFilingStatus() {
    return filingStatus;
  }

  public void setFilingStatus(StateFilingStatus filingStatus) {
    this.filingStatus = filingStatus;
  }

  public EmployeeUSStateTax allowances(Integer allowances) {
    this.allowances = allowances;
    return this;
  }

   /**
   * Get allowances
   * @return allowances
  **/
 
  public Integer getAllowances() {
    return allowances;
  }

  public void setAllowances(Integer allowances) {
    this.allowances = allowances;
  }

  public EmployeeUSStateTax additionalAmount(Double additionalAmount) {
    this.additionalAmount = additionalAmount;
    return this;
  }

   /**
   * Get additionalAmount
   * @return additionalAmount
  **/
 
  public Double getAdditionalAmount() {
    return additionalAmount;
  }

  public void setAdditionalAmount(Double additionalAmount) {
    this.additionalAmount = additionalAmount;
  }

  public EmployeeUSStateTax dependentAllowances(Integer dependentAllowances) {
    this.dependentAllowances = dependentAllowances;
    return this;
  }

   /**
   * Get dependentAllowances
   * @return dependentAllowances
  **/
 
  public Integer getDependentAllowances() {
    return dependentAllowances;
  }

  public void setDependentAllowances(Integer dependentAllowances) {
    this.dependentAllowances = dependentAllowances;
  }

  public EmployeeUSStateTax personalAllowances(Integer personalAllowances) {
    this.personalAllowances = personalAllowances;
    return this;
  }

   /**
   * Get personalAllowances
   * @return personalAllowances
  **/
 
  public Integer getPersonalAllowances() {
    return personalAllowances;
  }

  public void setPersonalAllowances(Integer personalAllowances) {
    this.personalAllowances = personalAllowances;
  }

  public EmployeeUSStateTax additionalAllowances(Integer additionalAllowances) {
    this.additionalAllowances = additionalAllowances;
    return this;
  }

   /**
   * Get additionalAllowances
   * @return additionalAllowances
  **/
 
  public Integer getAdditionalAllowances() {
    return additionalAllowances;
  }

  public void setAdditionalAllowances(Integer additionalAllowances) {
    this.additionalAllowances = additionalAllowances;
  }

  public EmployeeUSStateTax isTaxExempt(Boolean isTaxExempt) {
    this.isTaxExempt = isTaxExempt;
    return this;
  }

   /**
   * Get isTaxExempt
   * @return isTaxExempt
  **/
 
  public Boolean getIsTaxExempt() {
    return isTaxExempt;
  }

  public void setIsTaxExempt(Boolean isTaxExempt) {
    this.isTaxExempt = isTaxExempt;
  }

  public EmployeeUSStateTax alternateCalculationCode(String alternateCalculationCode) {
    this.alternateCalculationCode = alternateCalculationCode;
    return this;
  }

   /**
   * Get alternateCalculationCode
   * @return alternateCalculationCode
  **/
 
  public String getAlternateCalculationCode() {
    return alternateCalculationCode;
  }

  public void setAlternateCalculationCode(String alternateCalculationCode) {
    this.alternateCalculationCode = alternateCalculationCode;
  }

  public EmployeeUSStateTax exemptionAmount(Double exemptionAmount) {
    this.exemptionAmount = exemptionAmount;
    return this;
  }

   /**
   * Get exemptionAmount
   * @return exemptionAmount
  **/
 
  public Double getExemptionAmount() {
    return exemptionAmount;
  }

  public void setExemptionAmount(Double exemptionAmount) {
    this.exemptionAmount = exemptionAmount;
  }

  public EmployeeUSStateTax additionalTaxPercent(Double additionalTaxPercent) {
    this.additionalTaxPercent = additionalTaxPercent;
    return this;
  }

   /**
   * Get additionalTaxPercent
   * @return additionalTaxPercent
  **/
 
  public Double getAdditionalTaxPercent() {
    return additionalTaxPercent;
  }

  public void setAdditionalTaxPercent(Double additionalTaxPercent) {
    this.additionalTaxPercent = additionalTaxPercent;
  }

  public EmployeeUSStateTax additionalExemptionAmount(Double additionalExemptionAmount) {
    this.additionalExemptionAmount = additionalExemptionAmount;
    return this;
  }

   /**
   * Get additionalExemptionAmount
   * @return additionalExemptionAmount
  **/
 
  public Double getAdditionalExemptionAmount() {
    return additionalExemptionAmount;
  }

  public void setAdditionalExemptionAmount(Double additionalExemptionAmount) {
    this.additionalExemptionAmount = additionalExemptionAmount;
  }

  public EmployeeUSStateTax isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
   * Get isLocked
   * @return isLocked
  **/
 
  public Boolean getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public EmployeeUSStateTax lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeUSStateTax employeeUSStateTax = (EmployeeUSStateTax) o;
    return Objects.equals(this.effectiveStart, employeeUSStateTax.effectiveStart) &&
        Objects.equals(this.effectiveEnd, employeeUSStateTax.effectiveEnd) &&
        Objects.equals(this.state, employeeUSStateTax.state) &&
        Objects.equals(this.filingStatus, employeeUSStateTax.filingStatus) &&
        Objects.equals(this.allowances, employeeUSStateTax.allowances) &&
        Objects.equals(this.additionalAmount, employeeUSStateTax.additionalAmount) &&
        Objects.equals(this.dependentAllowances, employeeUSStateTax.dependentAllowances) &&
        Objects.equals(this.personalAllowances, employeeUSStateTax.personalAllowances) &&
        Objects.equals(this.additionalAllowances, employeeUSStateTax.additionalAllowances) &&
        Objects.equals(this.isTaxExempt, employeeUSStateTax.isTaxExempt) &&
        Objects.equals(this.alternateCalculationCode, employeeUSStateTax.alternateCalculationCode) &&
        Objects.equals(this.exemptionAmount, employeeUSStateTax.exemptionAmount) &&
        Objects.equals(this.additionalTaxPercent, employeeUSStateTax.additionalTaxPercent) &&
        Objects.equals(this.additionalExemptionAmount, employeeUSStateTax.additionalExemptionAmount) &&
        Objects.equals(this.isLocked, employeeUSStateTax.isLocked) &&
        Objects.equals(this.lastModifiedTimestamp, employeeUSStateTax.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveStart, effectiveEnd, state, filingStatus, allowances, additionalAmount, dependentAllowances, personalAllowances, additionalAllowances, isTaxExempt, alternateCalculationCode, exemptionAmount, additionalTaxPercent, additionalExemptionAmount, isLocked, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeUSStateTax {\n");
    
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    filingStatus: ").append(toIndentedString(filingStatus)).append("\n");
    sb.append("    allowances: ").append(toIndentedString(allowances)).append("\n");
    sb.append("    additionalAmount: ").append(toIndentedString(additionalAmount)).append("\n");
    sb.append("    dependentAllowances: ").append(toIndentedString(dependentAllowances)).append("\n");
    sb.append("    personalAllowances: ").append(toIndentedString(personalAllowances)).append("\n");
    sb.append("    additionalAllowances: ").append(toIndentedString(additionalAllowances)).append("\n");
    sb.append("    isTaxExempt: ").append(toIndentedString(isTaxExempt)).append("\n");
    sb.append("    alternateCalculationCode: ").append(toIndentedString(alternateCalculationCode)).append("\n");
    sb.append("    exemptionAmount: ").append(toIndentedString(exemptionAmount)).append("\n");
    sb.append("    additionalTaxPercent: ").append(toIndentedString(additionalTaxPercent)).append("\n");
    sb.append("    additionalExemptionAmount: ").append(toIndentedString(additionalExemptionAmount)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

