/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.EmployeeProperty;
import org.my.dayforce.model.EmployeePropertyOption;

/**
 * EmployeePropertyValue
 */

public class EmployeePropertyValue {
  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EmployeeProperty")
  private EmployeeProperty employeeProperty = null;

  @SerializedName("BitValue")
  private Boolean bitValue = null;

  @SerializedName("NumberValue")
  private Double numberValue = null;

  @SerializedName("OptionValue")
  private EmployeePropertyOption optionValue = null;

  @SerializedName("StringValue")
  private String stringValue = null;

  @SerializedName("DateTimeValue")
  private DateTime dateTimeValue = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeePropertyValue effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeePropertyValue effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeePropertyValue employeeProperty(EmployeeProperty employeeProperty) {
    this.employeeProperty = employeeProperty;
    return this;
  }

   /**
   * Get employeeProperty
   * @return employeeProperty
  **/
 
  public EmployeeProperty getEmployeeProperty() {
    return employeeProperty;
  }

  public void setEmployeeProperty(EmployeeProperty employeeProperty) {
    this.employeeProperty = employeeProperty;
  }

  public EmployeePropertyValue bitValue(Boolean bitValue) {
    this.bitValue = bitValue;
    return this;
  }

   /**
   * Get bitValue
   * @return bitValue
  **/
 
  public Boolean getBitValue() {
    return bitValue;
  }

  public void setBitValue(Boolean bitValue) {
    this.bitValue = bitValue;
  }

  public EmployeePropertyValue numberValue(Double numberValue) {
    this.numberValue = numberValue;
    return this;
  }

   /**
   * Get numberValue
   * @return numberValue
  **/
 
  public Double getNumberValue() {
    return numberValue;
  }

  public void setNumberValue(Double numberValue) {
    this.numberValue = numberValue;
  }

  public EmployeePropertyValue optionValue(EmployeePropertyOption optionValue) {
    this.optionValue = optionValue;
    return this;
  }

   /**
   * Get optionValue
   * @return optionValue
  **/
 
  public EmployeePropertyOption getOptionValue() {
    return optionValue;
  }

  public void setOptionValue(EmployeePropertyOption optionValue) {
    this.optionValue = optionValue;
  }

  public EmployeePropertyValue stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

   /**
   * Get stringValue
   * @return stringValue
  **/
 
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }

  public EmployeePropertyValue dateTimeValue(DateTime dateTimeValue) {
    this.dateTimeValue = dateTimeValue;
    return this;
  }

   /**
   * Get dateTimeValue
   * @return dateTimeValue
  **/
 
  public DateTime getDateTimeValue() {
    return dateTimeValue;
  }

  public void setDateTimeValue(DateTime dateTimeValue) {
    this.dateTimeValue = dateTimeValue;
  }

  public EmployeePropertyValue lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeePropertyValue employeePropertyValue = (EmployeePropertyValue) o;
    return Objects.equals(this.effectiveEnd, employeePropertyValue.effectiveEnd) &&
        Objects.equals(this.effectiveStart, employeePropertyValue.effectiveStart) &&
        Objects.equals(this.employeeProperty, employeePropertyValue.employeeProperty) &&
        Objects.equals(this.bitValue, employeePropertyValue.bitValue) &&
        Objects.equals(this.numberValue, employeePropertyValue.numberValue) &&
        Objects.equals(this.optionValue, employeePropertyValue.optionValue) &&
        Objects.equals(this.stringValue, employeePropertyValue.stringValue) &&
        Objects.equals(this.dateTimeValue, employeePropertyValue.dateTimeValue) &&
        Objects.equals(this.lastModifiedTimestamp, employeePropertyValue.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveEnd, effectiveStart, employeeProperty, bitValue, numberValue, optionValue, stringValue, dateTimeValue, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeePropertyValue {\n");
    
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    employeeProperty: ").append(toIndentedString(employeeProperty)).append("\n");
    sb.append("    bitValue: ").append(toIndentedString(bitValue)).append("\n");
    sb.append("    numberValue: ").append(toIndentedString(numberValue)).append("\n");
    sb.append("    optionValue: ").append(toIndentedString(optionValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    dateTimeValue: ").append(toIndentedString(dateTimeValue)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

