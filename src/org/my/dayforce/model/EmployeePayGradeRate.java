/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.PayGrade;

/**
 * EmployeePayGradeRate
 */

public class EmployeePayGradeRate {
  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("WorkAssignmentEffectiveStart")
  private DateTime workAssignmentEffectiveStart = null;

  @SerializedName("WorkAssignmentEffectiveEnd")
  private DateTime workAssignmentEffectiveEnd = null;

  @SerializedName("PayGrade")
  private PayGrade payGrade = null;

  @SerializedName("MinimumRate")
  private Double minimumRate = null;

  @SerializedName("ControlRate")
  private Double controlRate = null;

  @SerializedName("MaximumRate")
  private Double maximumRate = null;

  @SerializedName("RateMidPoint")
  private Double rateMidPoint = null;

  @SerializedName("MinimumSalary")
  private Double minimumSalary = null;

  @SerializedName("ControlSalary")
  private Double controlSalary = null;

  @SerializedName("MaximumSalary")
  private Double maximumSalary = null;

  @SerializedName("SalaryMidPoint")
  private Double salaryMidPoint = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeePayGradeRate effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeePayGradeRate effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeePayGradeRate workAssignmentEffectiveStart(DateTime workAssignmentEffectiveStart) {
    this.workAssignmentEffectiveStart = workAssignmentEffectiveStart;
    return this;
  }

   /**
   * Get workAssignmentEffectiveStart
   * @return workAssignmentEffectiveStart
  **/
 
  public DateTime getWorkAssignmentEffectiveStart() {
    return workAssignmentEffectiveStart;
  }

  public void setWorkAssignmentEffectiveStart(DateTime workAssignmentEffectiveStart) {
    this.workAssignmentEffectiveStart = workAssignmentEffectiveStart;
  }

  public EmployeePayGradeRate workAssignmentEffectiveEnd(DateTime workAssignmentEffectiveEnd) {
    this.workAssignmentEffectiveEnd = workAssignmentEffectiveEnd;
    return this;
  }

   /**
   * Get workAssignmentEffectiveEnd
   * @return workAssignmentEffectiveEnd
  **/
 
  public DateTime getWorkAssignmentEffectiveEnd() {
    return workAssignmentEffectiveEnd;
  }

  public void setWorkAssignmentEffectiveEnd(DateTime workAssignmentEffectiveEnd) {
    this.workAssignmentEffectiveEnd = workAssignmentEffectiveEnd;
  }

  public EmployeePayGradeRate payGrade(PayGrade payGrade) {
    this.payGrade = payGrade;
    return this;
  }

   /**
   * Get payGrade
   * @return payGrade
  **/
 
  public PayGrade getPayGrade() {
    return payGrade;
  }

  public void setPayGrade(PayGrade payGrade) {
    this.payGrade = payGrade;
  }

  public EmployeePayGradeRate minimumRate(Double minimumRate) {
    this.minimumRate = minimumRate;
    return this;
  }

   /**
   * Get minimumRate
   * @return minimumRate
  **/
 
  public Double getMinimumRate() {
    return minimumRate;
  }

  public void setMinimumRate(Double minimumRate) {
    this.minimumRate = minimumRate;
  }

  public EmployeePayGradeRate controlRate(Double controlRate) {
    this.controlRate = controlRate;
    return this;
  }

   /**
   * Get controlRate
   * @return controlRate
  **/
 
  public Double getControlRate() {
    return controlRate;
  }

  public void setControlRate(Double controlRate) {
    this.controlRate = controlRate;
  }

  public EmployeePayGradeRate maximumRate(Double maximumRate) {
    this.maximumRate = maximumRate;
    return this;
  }

   /**
   * Get maximumRate
   * @return maximumRate
  **/
 
  public Double getMaximumRate() {
    return maximumRate;
  }

  public void setMaximumRate(Double maximumRate) {
    this.maximumRate = maximumRate;
  }

  public EmployeePayGradeRate rateMidPoint(Double rateMidPoint) {
    this.rateMidPoint = rateMidPoint;
    return this;
  }

   /**
   * Get rateMidPoint
   * @return rateMidPoint
  **/
 
  public Double getRateMidPoint() {
    return rateMidPoint;
  }

  public void setRateMidPoint(Double rateMidPoint) {
    this.rateMidPoint = rateMidPoint;
  }

  public EmployeePayGradeRate minimumSalary(Double minimumSalary) {
    this.minimumSalary = minimumSalary;
    return this;
  }

   /**
   * Get minimumSalary
   * @return minimumSalary
  **/
 
  public Double getMinimumSalary() {
    return minimumSalary;
  }

  public void setMinimumSalary(Double minimumSalary) {
    this.minimumSalary = minimumSalary;
  }

  public EmployeePayGradeRate controlSalary(Double controlSalary) {
    this.controlSalary = controlSalary;
    return this;
  }

   /**
   * Get controlSalary
   * @return controlSalary
  **/
 
  public Double getControlSalary() {
    return controlSalary;
  }

  public void setControlSalary(Double controlSalary) {
    this.controlSalary = controlSalary;
  }

  public EmployeePayGradeRate maximumSalary(Double maximumSalary) {
    this.maximumSalary = maximumSalary;
    return this;
  }

   /**
   * Get maximumSalary
   * @return maximumSalary
  **/
 
  public Double getMaximumSalary() {
    return maximumSalary;
  }

  public void setMaximumSalary(Double maximumSalary) {
    this.maximumSalary = maximumSalary;
  }

  public EmployeePayGradeRate salaryMidPoint(Double salaryMidPoint) {
    this.salaryMidPoint = salaryMidPoint;
    return this;
  }

   /**
   * Get salaryMidPoint
   * @return salaryMidPoint
  **/
 
  public Double getSalaryMidPoint() {
    return salaryMidPoint;
  }

  public void setSalaryMidPoint(Double salaryMidPoint) {
    this.salaryMidPoint = salaryMidPoint;
  }

  public EmployeePayGradeRate lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeePayGradeRate employeePayGradeRate = (EmployeePayGradeRate) o;
    return Objects.equals(this.effectiveStart, employeePayGradeRate.effectiveStart) &&
        Objects.equals(this.effectiveEnd, employeePayGradeRate.effectiveEnd) &&
        Objects.equals(this.workAssignmentEffectiveStart, employeePayGradeRate.workAssignmentEffectiveStart) &&
        Objects.equals(this.workAssignmentEffectiveEnd, employeePayGradeRate.workAssignmentEffectiveEnd) &&
        Objects.equals(this.payGrade, employeePayGradeRate.payGrade) &&
        Objects.equals(this.minimumRate, employeePayGradeRate.minimumRate) &&
        Objects.equals(this.controlRate, employeePayGradeRate.controlRate) &&
        Objects.equals(this.maximumRate, employeePayGradeRate.maximumRate) &&
        Objects.equals(this.rateMidPoint, employeePayGradeRate.rateMidPoint) &&
        Objects.equals(this.minimumSalary, employeePayGradeRate.minimumSalary) &&
        Objects.equals(this.controlSalary, employeePayGradeRate.controlSalary) &&
        Objects.equals(this.maximumSalary, employeePayGradeRate.maximumSalary) &&
        Objects.equals(this.salaryMidPoint, employeePayGradeRate.salaryMidPoint) &&
        Objects.equals(this.lastModifiedTimestamp, employeePayGradeRate.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveStart, effectiveEnd, workAssignmentEffectiveStart, workAssignmentEffectiveEnd, payGrade, minimumRate, controlRate, maximumRate, rateMidPoint, minimumSalary, controlSalary, maximumSalary, salaryMidPoint, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeePayGradeRate {\n");
    
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    workAssignmentEffectiveStart: ").append(toIndentedString(workAssignmentEffectiveStart)).append("\n");
    sb.append("    workAssignmentEffectiveEnd: ").append(toIndentedString(workAssignmentEffectiveEnd)).append("\n");
    sb.append("    payGrade: ").append(toIndentedString(payGrade)).append("\n");
    sb.append("    minimumRate: ").append(toIndentedString(minimumRate)).append("\n");
    sb.append("    controlRate: ").append(toIndentedString(controlRate)).append("\n");
    sb.append("    maximumRate: ").append(toIndentedString(maximumRate)).append("\n");
    sb.append("    rateMidPoint: ").append(toIndentedString(rateMidPoint)).append("\n");
    sb.append("    minimumSalary: ").append(toIndentedString(minimumSalary)).append("\n");
    sb.append("    controlSalary: ").append(toIndentedString(controlSalary)).append("\n");
    sb.append("    maximumSalary: ").append(toIndentedString(maximumSalary)).append("\n");
    sb.append("    salaryMidPoint: ").append(toIndentedString(salaryMidPoint)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

