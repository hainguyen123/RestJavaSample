/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.PunchExtraData;

/**
 * EmployeeRawPunch
 */

public class EmployeeRawPunch {
  @SerializedName("RawPunchXRefCode")
  private String rawPunchXRefCode = null;

  @SerializedName("PunchState")
  private String punchState = null;

  @SerializedName("PayDate")
  private DateTime payDate = null;

  @SerializedName("EmployeeXRefCode")
  private String employeeXRefCode = null;

  @SerializedName("EmployeeBadge")
  private String employeeBadge = null;

  @SerializedName("RawPunchTime")
  private DateTime rawPunchTime = null;

  @SerializedName("WasOfflinePunch")
  private Boolean wasOfflinePunch = null;

  @SerializedName("ExtraData")
  private PunchExtraData extraData = null;

  @SerializedName("PunchType")
  private String punchType = null;

  @SerializedName("Comment")
  private String comment = null;

  @SerializedName("PunchDevice")
  private String punchDevice = null;

  @SerializedName("SupervisorBadge")
  private String supervisorBadge = null;

  @SerializedName("IsDuplicate")
  private Boolean isDuplicate = null;

  @SerializedName("RejectedReason")
  private String rejectedReason = null;

  @SerializedName("LocationXRefCode")
  private String locationXRefCode = null;

  @SerializedName("PositionXRefCode")
  private String positionXRefCode = null;

  @SerializedName("DepartmentXRefCode")
  private String departmentXRefCode = null;

  @SerializedName("JobXRefCode")
  private String jobXRefCode = null;

  @SerializedName("IPAddress")
  private String ipAddress = null;

  @SerializedName("PunchOrigin")
  private String punchOrigin = null;

  @SerializedName("Latitude")
  private Double latitude = null;

  @SerializedName("Longitude")
  private Double longitude = null;

  @SerializedName("Accuracy")
  private Integer accuracy = null;

  public EmployeeRawPunch rawPunchXRefCode(String rawPunchXRefCode) {
    this.rawPunchXRefCode = rawPunchXRefCode;
    return this;
  }

   /**
   * Get rawPunchXRefCode
   * @return rawPunchXRefCode
  **/
 
  public String getRawPunchXRefCode() {
    return rawPunchXRefCode;
  }

  public void setRawPunchXRefCode(String rawPunchXRefCode) {
    this.rawPunchXRefCode = rawPunchXRefCode;
  }

  public EmployeeRawPunch punchState(String punchState) {
    this.punchState = punchState;
    return this;
  }

   /**
   * Get punchState
   * @return punchState
  **/
 
  public String getPunchState() {
    return punchState;
  }

  public void setPunchState(String punchState) {
    this.punchState = punchState;
  }

  public EmployeeRawPunch payDate(DateTime payDate) {
    this.payDate = payDate;
    return this;
  }

   /**
   * Get payDate
   * @return payDate
  **/
 
  public DateTime getPayDate() {
    return payDate;
  }

  public void setPayDate(DateTime payDate) {
    this.payDate = payDate;
  }

  public EmployeeRawPunch employeeXRefCode(String employeeXRefCode) {
    this.employeeXRefCode = employeeXRefCode;
    return this;
  }

   /**
   * Get employeeXRefCode
   * @return employeeXRefCode
  **/
 
  public String getEmployeeXRefCode() {
    return employeeXRefCode;
  }

  public void setEmployeeXRefCode(String employeeXRefCode) {
    this.employeeXRefCode = employeeXRefCode;
  }

  public EmployeeRawPunch employeeBadge(String employeeBadge) {
    this.employeeBadge = employeeBadge;
    return this;
  }

   /**
   * Get employeeBadge
   * @return employeeBadge
  **/
 
  public String getEmployeeBadge() {
    return employeeBadge;
  }

  public void setEmployeeBadge(String employeeBadge) {
    this.employeeBadge = employeeBadge;
  }

  public EmployeeRawPunch rawPunchTime(DateTime rawPunchTime) {
    this.rawPunchTime = rawPunchTime;
    return this;
  }

   /**
   * Get rawPunchTime
   * @return rawPunchTime
  **/
 
  public DateTime getRawPunchTime() {
    return rawPunchTime;
  }

  public void setRawPunchTime(DateTime rawPunchTime) {
    this.rawPunchTime = rawPunchTime;
  }

  public EmployeeRawPunch wasOfflinePunch(Boolean wasOfflinePunch) {
    this.wasOfflinePunch = wasOfflinePunch;
    return this;
  }

   /**
   * Get wasOfflinePunch
   * @return wasOfflinePunch
  **/
 
  public Boolean getWasOfflinePunch() {
    return wasOfflinePunch;
  }

  public void setWasOfflinePunch(Boolean wasOfflinePunch) {
    this.wasOfflinePunch = wasOfflinePunch;
  }

  public EmployeeRawPunch extraData(PunchExtraData extraData) {
    this.extraData = extraData;
    return this;
  }

   /**
   * Get extraData
   * @return extraData
  **/
 
  public PunchExtraData getExtraData() {
    return extraData;
  }

  public void setExtraData(PunchExtraData extraData) {
    this.extraData = extraData;
  }

  public EmployeeRawPunch punchType(String punchType) {
    this.punchType = punchType;
    return this;
  }

   /**
   * Get punchType
   * @return punchType
  **/
 
  public String getPunchType() {
    return punchType;
  }

  public void setPunchType(String punchType) {
    this.punchType = punchType;
  }

  public EmployeeRawPunch comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
 
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public EmployeeRawPunch punchDevice(String punchDevice) {
    this.punchDevice = punchDevice;
    return this;
  }

   /**
   * Get punchDevice
   * @return punchDevice
  **/
 
  public String getPunchDevice() {
    return punchDevice;
  }

  public void setPunchDevice(String punchDevice) {
    this.punchDevice = punchDevice;
  }

  public EmployeeRawPunch supervisorBadge(String supervisorBadge) {
    this.supervisorBadge = supervisorBadge;
    return this;
  }

   /**
   * Get supervisorBadge
   * @return supervisorBadge
  **/
 
  public String getSupervisorBadge() {
    return supervisorBadge;
  }

  public void setSupervisorBadge(String supervisorBadge) {
    this.supervisorBadge = supervisorBadge;
  }

  public EmployeeRawPunch isDuplicate(Boolean isDuplicate) {
    this.isDuplicate = isDuplicate;
    return this;
  }

   /**
   * Get isDuplicate
   * @return isDuplicate
  **/
 
  public Boolean getIsDuplicate() {
    return isDuplicate;
  }

  public void setIsDuplicate(Boolean isDuplicate) {
    this.isDuplicate = isDuplicate;
  }

  public EmployeeRawPunch rejectedReason(String rejectedReason) {
    this.rejectedReason = rejectedReason;
    return this;
  }

   /**
   * Get rejectedReason
   * @return rejectedReason
  **/
 
  public String getRejectedReason() {
    return rejectedReason;
  }

  public void setRejectedReason(String rejectedReason) {
    this.rejectedReason = rejectedReason;
  }

  public EmployeeRawPunch locationXRefCode(String locationXRefCode) {
    this.locationXRefCode = locationXRefCode;
    return this;
  }

   /**
   * Get locationXRefCode
   * @return locationXRefCode
  **/
 
  public String getLocationXRefCode() {
    return locationXRefCode;
  }

  public void setLocationXRefCode(String locationXRefCode) {
    this.locationXRefCode = locationXRefCode;
  }

  public EmployeeRawPunch positionXRefCode(String positionXRefCode) {
    this.positionXRefCode = positionXRefCode;
    return this;
  }

   /**
   * Get positionXRefCode
   * @return positionXRefCode
  **/
 
  public String getPositionXRefCode() {
    return positionXRefCode;
  }

  public void setPositionXRefCode(String positionXRefCode) {
    this.positionXRefCode = positionXRefCode;
  }

  public EmployeeRawPunch departmentXRefCode(String departmentXRefCode) {
    this.departmentXRefCode = departmentXRefCode;
    return this;
  }

   /**
   * Get departmentXRefCode
   * @return departmentXRefCode
  **/
 
  public String getDepartmentXRefCode() {
    return departmentXRefCode;
  }

  public void setDepartmentXRefCode(String departmentXRefCode) {
    this.departmentXRefCode = departmentXRefCode;
  }

  public EmployeeRawPunch jobXRefCode(String jobXRefCode) {
    this.jobXRefCode = jobXRefCode;
    return this;
  }

   /**
   * Get jobXRefCode
   * @return jobXRefCode
  **/
 
  public String getJobXRefCode() {
    return jobXRefCode;
  }

  public void setJobXRefCode(String jobXRefCode) {
    this.jobXRefCode = jobXRefCode;
  }

  public EmployeeRawPunch ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
 
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public EmployeeRawPunch punchOrigin(String punchOrigin) {
    this.punchOrigin = punchOrigin;
    return this;
  }

   /**
   * Get punchOrigin
   * @return punchOrigin
  **/
 
  public String getPunchOrigin() {
    return punchOrigin;
  }

  public void setPunchOrigin(String punchOrigin) {
    this.punchOrigin = punchOrigin;
  }

  public EmployeeRawPunch latitude(Double latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
 
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }

  public EmployeeRawPunch longitude(Double longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
 
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }

  public EmployeeRawPunch accuracy(Integer accuracy) {
    this.accuracy = accuracy;
    return this;
  }

   /**
   * Get accuracy
   * @return accuracy
  **/
 
  public Integer getAccuracy() {
    return accuracy;
  }

  public void setAccuracy(Integer accuracy) {
    this.accuracy = accuracy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeRawPunch employeeRawPunch = (EmployeeRawPunch) o;
    return Objects.equals(this.rawPunchXRefCode, employeeRawPunch.rawPunchXRefCode) &&
        Objects.equals(this.punchState, employeeRawPunch.punchState) &&
        Objects.equals(this.payDate, employeeRawPunch.payDate) &&
        Objects.equals(this.employeeXRefCode, employeeRawPunch.employeeXRefCode) &&
        Objects.equals(this.employeeBadge, employeeRawPunch.employeeBadge) &&
        Objects.equals(this.rawPunchTime, employeeRawPunch.rawPunchTime) &&
        Objects.equals(this.wasOfflinePunch, employeeRawPunch.wasOfflinePunch) &&
        Objects.equals(this.extraData, employeeRawPunch.extraData) &&
        Objects.equals(this.punchType, employeeRawPunch.punchType) &&
        Objects.equals(this.comment, employeeRawPunch.comment) &&
        Objects.equals(this.punchDevice, employeeRawPunch.punchDevice) &&
        Objects.equals(this.supervisorBadge, employeeRawPunch.supervisorBadge) &&
        Objects.equals(this.isDuplicate, employeeRawPunch.isDuplicate) &&
        Objects.equals(this.rejectedReason, employeeRawPunch.rejectedReason) &&
        Objects.equals(this.locationXRefCode, employeeRawPunch.locationXRefCode) &&
        Objects.equals(this.positionXRefCode, employeeRawPunch.positionXRefCode) &&
        Objects.equals(this.departmentXRefCode, employeeRawPunch.departmentXRefCode) &&
        Objects.equals(this.jobXRefCode, employeeRawPunch.jobXRefCode) &&
        Objects.equals(this.ipAddress, employeeRawPunch.ipAddress) &&
        Objects.equals(this.punchOrigin, employeeRawPunch.punchOrigin) &&
        Objects.equals(this.latitude, employeeRawPunch.latitude) &&
        Objects.equals(this.longitude, employeeRawPunch.longitude) &&
        Objects.equals(this.accuracy, employeeRawPunch.accuracy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rawPunchXRefCode, punchState, payDate, employeeXRefCode, employeeBadge, rawPunchTime, wasOfflinePunch, extraData, punchType, comment, punchDevice, supervisorBadge, isDuplicate, rejectedReason, locationXRefCode, positionXRefCode, departmentXRefCode, jobXRefCode, ipAddress, punchOrigin, latitude, longitude, accuracy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeRawPunch {\n");
    
    sb.append("    rawPunchXRefCode: ").append(toIndentedString(rawPunchXRefCode)).append("\n");
    sb.append("    punchState: ").append(toIndentedString(punchState)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    employeeXRefCode: ").append(toIndentedString(employeeXRefCode)).append("\n");
    sb.append("    employeeBadge: ").append(toIndentedString(employeeBadge)).append("\n");
    sb.append("    rawPunchTime: ").append(toIndentedString(rawPunchTime)).append("\n");
    sb.append("    wasOfflinePunch: ").append(toIndentedString(wasOfflinePunch)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    punchType: ").append(toIndentedString(punchType)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    punchDevice: ").append(toIndentedString(punchDevice)).append("\n");
    sb.append("    supervisorBadge: ").append(toIndentedString(supervisorBadge)).append("\n");
    sb.append("    isDuplicate: ").append(toIndentedString(isDuplicate)).append("\n");
    sb.append("    rejectedReason: ").append(toIndentedString(rejectedReason)).append("\n");
    sb.append("    locationXRefCode: ").append(toIndentedString(locationXRefCode)).append("\n");
    sb.append("    positionXRefCode: ").append(toIndentedString(positionXRefCode)).append("\n");
    sb.append("    departmentXRefCode: ").append(toIndentedString(departmentXRefCode)).append("\n");
    sb.append("    jobXRefCode: ").append(toIndentedString(jobXRefCode)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    punchOrigin: ").append(toIndentedString(punchOrigin)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    accuracy: ").append(toIndentedString(accuracy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

