/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import org.my.dayforce.model.Activity;
import org.my.dayforce.model.Breaks;
import org.my.dayforce.model.LaborMetric;
import org.my.dayforce.model.Skills;

/**
 * EmployeeSchedule
 */

public class EmployeeSchedule {
  @SerializedName("TimeStart")
  private DateTime timeStart = null;

  @SerializedName("TimeEnd")
  private DateTime timeEnd = null;

  @SerializedName("NetHours")
  private Double netHours = null;

  @SerializedName("DepartmentXRefCode")
  private String departmentXRefCode = null;

  @SerializedName("JobXRefCode")
  private String jobXRefCode = null;

  @SerializedName("OrgUnitXRefCode")
  private String orgUnitXRefCode = null;

  @SerializedName("OrgLocationTypeXRefCode")
  private String orgLocationTypeXRefCode = null;

  @SerializedName("PayAdjCodeXRefCode")
  private String payAdjCodeXRefCode = null;

  @SerializedName("DocketXRefCode")
  private String docketXRefCode = null;

  @SerializedName("ProjectXRefCode")
  private String projectXRefCode = null;

  @SerializedName("Published")
  private Boolean published = null;

  @SerializedName("Breaks")
  private List<Breaks> breaks = new ArrayList<Breaks>();

  @SerializedName("Activities")
  private List<Activity> activities = new ArrayList<Activity>();

  @SerializedName("Skills")
  private List<Skills> skills = new ArrayList<Skills>();

  @SerializedName("LaborMetrics")
  private List<LaborMetric> laborMetrics = new ArrayList<LaborMetric>();

  public EmployeeSchedule timeStart(DateTime timeStart) {
    this.timeStart = timeStart;
    return this;
  }

   /**
   * Get timeStart
   * @return timeStart
  **/
 
  public DateTime getTimeStart() {
    return timeStart;
  }

  public void setTimeStart(DateTime timeStart) {
    this.timeStart = timeStart;
  }

  public EmployeeSchedule timeEnd(DateTime timeEnd) {
    this.timeEnd = timeEnd;
    return this;
  }

   /**
   * Get timeEnd
   * @return timeEnd
  **/
 
  public DateTime getTimeEnd() {
    return timeEnd;
  }

  public void setTimeEnd(DateTime timeEnd) {
    this.timeEnd = timeEnd;
  }

  public EmployeeSchedule netHours(Double netHours) {
    this.netHours = netHours;
    return this;
  }

   /**
   * Get netHours
   * @return netHours
  **/
 
  public Double getNetHours() {
    return netHours;
  }

  public void setNetHours(Double netHours) {
    this.netHours = netHours;
  }

  public EmployeeSchedule departmentXRefCode(String departmentXRefCode) {
    this.departmentXRefCode = departmentXRefCode;
    return this;
  }

   /**
   * Get departmentXRefCode
   * @return departmentXRefCode
  **/
 
  public String getDepartmentXRefCode() {
    return departmentXRefCode;
  }

  public void setDepartmentXRefCode(String departmentXRefCode) {
    this.departmentXRefCode = departmentXRefCode;
  }

  public EmployeeSchedule jobXRefCode(String jobXRefCode) {
    this.jobXRefCode = jobXRefCode;
    return this;
  }

   /**
   * Get jobXRefCode
   * @return jobXRefCode
  **/
 
  public String getJobXRefCode() {
    return jobXRefCode;
  }

  public void setJobXRefCode(String jobXRefCode) {
    this.jobXRefCode = jobXRefCode;
  }

  public EmployeeSchedule orgUnitXRefCode(String orgUnitXRefCode) {
    this.orgUnitXRefCode = orgUnitXRefCode;
    return this;
  }

   /**
   * Get orgUnitXRefCode
   * @return orgUnitXRefCode
  **/
 
  public String getOrgUnitXRefCode() {
    return orgUnitXRefCode;
  }

  public void setOrgUnitXRefCode(String orgUnitXRefCode) {
    this.orgUnitXRefCode = orgUnitXRefCode;
  }

  public EmployeeSchedule orgLocationTypeXRefCode(String orgLocationTypeXRefCode) {
    this.orgLocationTypeXRefCode = orgLocationTypeXRefCode;
    return this;
  }

   /**
   * Get orgLocationTypeXRefCode
   * @return orgLocationTypeXRefCode
  **/
 
  public String getOrgLocationTypeXRefCode() {
    return orgLocationTypeXRefCode;
  }

  public void setOrgLocationTypeXRefCode(String orgLocationTypeXRefCode) {
    this.orgLocationTypeXRefCode = orgLocationTypeXRefCode;
  }

  public EmployeeSchedule payAdjCodeXRefCode(String payAdjCodeXRefCode) {
    this.payAdjCodeXRefCode = payAdjCodeXRefCode;
    return this;
  }

   /**
   * Get payAdjCodeXRefCode
   * @return payAdjCodeXRefCode
  **/
 
  public String getPayAdjCodeXRefCode() {
    return payAdjCodeXRefCode;
  }

  public void setPayAdjCodeXRefCode(String payAdjCodeXRefCode) {
    this.payAdjCodeXRefCode = payAdjCodeXRefCode;
  }

  public EmployeeSchedule docketXRefCode(String docketXRefCode) {
    this.docketXRefCode = docketXRefCode;
    return this;
  }

   /**
   * Get docketXRefCode
   * @return docketXRefCode
  **/
 
  public String getDocketXRefCode() {
    return docketXRefCode;
  }

  public void setDocketXRefCode(String docketXRefCode) {
    this.docketXRefCode = docketXRefCode;
  }

  public EmployeeSchedule projectXRefCode(String projectXRefCode) {
    this.projectXRefCode = projectXRefCode;
    return this;
  }

   /**
   * Get projectXRefCode
   * @return projectXRefCode
  **/
 
  public String getProjectXRefCode() {
    return projectXRefCode;
  }

  public void setProjectXRefCode(String projectXRefCode) {
    this.projectXRefCode = projectXRefCode;
  }

  public EmployeeSchedule published(Boolean published) {
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
 
  public Boolean getPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }

  public EmployeeSchedule breaks(List<Breaks> breaks) {
    this.breaks = breaks;
    return this;
  }

  public EmployeeSchedule addBreaksItem(Breaks breaksItem) {
    this.breaks.add(breaksItem);
    return this;
  }

   /**
   * Get breaks
   * @return breaks
  **/
 
  public List<Breaks> getBreaks() {
    return breaks;
  }

  public void setBreaks(List<Breaks> breaks) {
    this.breaks = breaks;
  }

  public EmployeeSchedule activities(List<Activity> activities) {
    this.activities = activities;
    return this;
  }

  public EmployeeSchedule addActivitiesItem(Activity activitiesItem) {
    this.activities.add(activitiesItem);
    return this;
  }

   /**
   * Get activities
   * @return activities
  **/
 
  public List<Activity> getActivities() {
    return activities;
  }

  public void setActivities(List<Activity> activities) {
    this.activities = activities;
  }

  public EmployeeSchedule skills(List<Skills> skills) {
    this.skills = skills;
    return this;
  }

  public EmployeeSchedule addSkillsItem(Skills skillsItem) {
    this.skills.add(skillsItem);
    return this;
  }

   /**
   * Get skills
   * @return skills
  **/
 
  public List<Skills> getSkills() {
    return skills;
  }

  public void setSkills(List<Skills> skills) {
    this.skills = skills;
  }

  public EmployeeSchedule laborMetrics(List<LaborMetric> laborMetrics) {
    this.laborMetrics = laborMetrics;
    return this;
  }

  public EmployeeSchedule addLaborMetricsItem(LaborMetric laborMetricsItem) {
    this.laborMetrics.add(laborMetricsItem);
    return this;
  }

   /**
   * Get laborMetrics
   * @return laborMetrics
  **/
 
  public List<LaborMetric> getLaborMetrics() {
    return laborMetrics;
  }

  public void setLaborMetrics(List<LaborMetric> laborMetrics) {
    this.laborMetrics = laborMetrics;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeSchedule employeeSchedule = (EmployeeSchedule) o;
    return Objects.equals(this.timeStart, employeeSchedule.timeStart) &&
        Objects.equals(this.timeEnd, employeeSchedule.timeEnd) &&
        Objects.equals(this.netHours, employeeSchedule.netHours) &&
        Objects.equals(this.departmentXRefCode, employeeSchedule.departmentXRefCode) &&
        Objects.equals(this.jobXRefCode, employeeSchedule.jobXRefCode) &&
        Objects.equals(this.orgUnitXRefCode, employeeSchedule.orgUnitXRefCode) &&
        Objects.equals(this.orgLocationTypeXRefCode, employeeSchedule.orgLocationTypeXRefCode) &&
        Objects.equals(this.payAdjCodeXRefCode, employeeSchedule.payAdjCodeXRefCode) &&
        Objects.equals(this.docketXRefCode, employeeSchedule.docketXRefCode) &&
        Objects.equals(this.projectXRefCode, employeeSchedule.projectXRefCode) &&
        Objects.equals(this.published, employeeSchedule.published) &&
        Objects.equals(this.breaks, employeeSchedule.breaks) &&
        Objects.equals(this.activities, employeeSchedule.activities) &&
        Objects.equals(this.skills, employeeSchedule.skills) &&
        Objects.equals(this.laborMetrics, employeeSchedule.laborMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timeStart, timeEnd, netHours, departmentXRefCode, jobXRefCode, orgUnitXRefCode, orgLocationTypeXRefCode, payAdjCodeXRefCode, docketXRefCode, projectXRefCode, published, breaks, activities, skills, laborMetrics);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeSchedule {\n");
    
    sb.append("    timeStart: ").append(toIndentedString(timeStart)).append("\n");
    sb.append("    timeEnd: ").append(toIndentedString(timeEnd)).append("\n");
    sb.append("    netHours: ").append(toIndentedString(netHours)).append("\n");
    sb.append("    departmentXRefCode: ").append(toIndentedString(departmentXRefCode)).append("\n");
    sb.append("    jobXRefCode: ").append(toIndentedString(jobXRefCode)).append("\n");
    sb.append("    orgUnitXRefCode: ").append(toIndentedString(orgUnitXRefCode)).append("\n");
    sb.append("    orgLocationTypeXRefCode: ").append(toIndentedString(orgLocationTypeXRefCode)).append("\n");
    sb.append("    payAdjCodeXRefCode: ").append(toIndentedString(payAdjCodeXRefCode)).append("\n");
    sb.append("    docketXRefCode: ").append(toIndentedString(docketXRefCode)).append("\n");
    sb.append("    projectXRefCode: ").append(toIndentedString(projectXRefCode)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    breaks: ").append(toIndentedString(breaks)).append("\n");
    sb.append("    activities: ").append(toIndentedString(activities)).append("\n");
    sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
    sb.append("    laborMetrics: ").append(toIndentedString(laborMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

