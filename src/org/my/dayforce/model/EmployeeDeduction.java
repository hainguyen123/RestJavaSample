/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.Deduction;
import org.my.dayforce.model.ElectionSchedule;
import org.my.dayforce.model.EmployeeDeductionLimitCollection;
import org.my.dayforce.model.EmployeeDeductionParameterCollection;
import org.my.dayforce.model.Location;
import org.my.dayforce.model.PayGroup;
import org.my.dayforce.model.Position;

/**
 * EmployeeDeduction
 */

public class EmployeeDeduction {
  @SerializedName("Deduction")
  private Deduction deduction = null;

  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("ElectionStartPayPeriodStartDate")
  private DateTime electionStartPayPeriodStartDate = null;

  @SerializedName("ElectionStartPayGroup")
  private PayGroup electionStartPayGroup = null;

  @SerializedName("ElectionSchedule")
  private ElectionSchedule electionSchedule = null;

  @SerializedName("IsBlocked")
  private Boolean isBlocked = null;

  @SerializedName("Position")
  private Position position = null;

  @SerializedName("Location")
  private Location location = null;

  @SerializedName("ContinuePaymentOnStatutoryPay")
  private Boolean continuePaymentOnStatutoryPay = null;

  @SerializedName("IsOptOut")
  private Integer isOptOut = null;

  @SerializedName("EmployeeDeductionParameters")
  private EmployeeDeductionParameterCollection employeeDeductionParameters = null;

  @SerializedName("EmployeeDeductionLimits")
  private EmployeeDeductionLimitCollection employeeDeductionLimits = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeDeduction deduction(Deduction deduction) {
    this.deduction = deduction;
    return this;
  }

   /**
   * Get deduction
   * @return deduction
  **/
 
  public Deduction getDeduction() {
    return deduction;
  }

  public void setDeduction(Deduction deduction) {
    this.deduction = deduction;
  }

  public EmployeeDeduction effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeDeduction effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeDeduction electionStartPayPeriodStartDate(DateTime electionStartPayPeriodStartDate) {
    this.electionStartPayPeriodStartDate = electionStartPayPeriodStartDate;
    return this;
  }

   /**
   * Get electionStartPayPeriodStartDate
   * @return electionStartPayPeriodStartDate
  **/
 
  public DateTime getElectionStartPayPeriodStartDate() {
    return electionStartPayPeriodStartDate;
  }

  public void setElectionStartPayPeriodStartDate(DateTime electionStartPayPeriodStartDate) {
    this.electionStartPayPeriodStartDate = electionStartPayPeriodStartDate;
  }

  public EmployeeDeduction electionStartPayGroup(PayGroup electionStartPayGroup) {
    this.electionStartPayGroup = electionStartPayGroup;
    return this;
  }

   /**
   * Get electionStartPayGroup
   * @return electionStartPayGroup
  **/
 
  public PayGroup getElectionStartPayGroup() {
    return electionStartPayGroup;
  }

  public void setElectionStartPayGroup(PayGroup electionStartPayGroup) {
    this.electionStartPayGroup = electionStartPayGroup;
  }

  public EmployeeDeduction electionSchedule(ElectionSchedule electionSchedule) {
    this.electionSchedule = electionSchedule;
    return this;
  }

   /**
   * Get electionSchedule
   * @return electionSchedule
  **/
 
  public ElectionSchedule getElectionSchedule() {
    return electionSchedule;
  }

  public void setElectionSchedule(ElectionSchedule electionSchedule) {
    this.electionSchedule = electionSchedule;
  }

  public EmployeeDeduction isBlocked(Boolean isBlocked) {
    this.isBlocked = isBlocked;
    return this;
  }

   /**
   * Get isBlocked
   * @return isBlocked
  **/
 
  public Boolean getIsBlocked() {
    return isBlocked;
  }

  public void setIsBlocked(Boolean isBlocked) {
    this.isBlocked = isBlocked;
  }

  public EmployeeDeduction position(Position position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
 
  public Position getPosition() {
    return position;
  }

  public void setPosition(Position position) {
    this.position = position;
  }

  public EmployeeDeduction location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
 
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public EmployeeDeduction continuePaymentOnStatutoryPay(Boolean continuePaymentOnStatutoryPay) {
    this.continuePaymentOnStatutoryPay = continuePaymentOnStatutoryPay;
    return this;
  }

   /**
   * Get continuePaymentOnStatutoryPay
   * @return continuePaymentOnStatutoryPay
  **/
 
  public Boolean getContinuePaymentOnStatutoryPay() {
    return continuePaymentOnStatutoryPay;
  }

  public void setContinuePaymentOnStatutoryPay(Boolean continuePaymentOnStatutoryPay) {
    this.continuePaymentOnStatutoryPay = continuePaymentOnStatutoryPay;
  }

  public EmployeeDeduction isOptOut(Integer isOptOut) {
    this.isOptOut = isOptOut;
    return this;
  }

   /**
   * Get isOptOut
   * @return isOptOut
  **/
 
  public Integer getIsOptOut() {
    return isOptOut;
  }

  public void setIsOptOut(Integer isOptOut) {
    this.isOptOut = isOptOut;
  }

  public EmployeeDeduction employeeDeductionParameters(EmployeeDeductionParameterCollection employeeDeductionParameters) {
    this.employeeDeductionParameters = employeeDeductionParameters;
    return this;
  }

   /**
   * Get employeeDeductionParameters
   * @return employeeDeductionParameters
  **/
 
  public EmployeeDeductionParameterCollection getEmployeeDeductionParameters() {
    return employeeDeductionParameters;
  }

  public void setEmployeeDeductionParameters(EmployeeDeductionParameterCollection employeeDeductionParameters) {
    this.employeeDeductionParameters = employeeDeductionParameters;
  }

  public EmployeeDeduction employeeDeductionLimits(EmployeeDeductionLimitCollection employeeDeductionLimits) {
    this.employeeDeductionLimits = employeeDeductionLimits;
    return this;
  }

   /**
   * Get employeeDeductionLimits
   * @return employeeDeductionLimits
  **/
 
  public EmployeeDeductionLimitCollection getEmployeeDeductionLimits() {
    return employeeDeductionLimits;
  }

  public void setEmployeeDeductionLimits(EmployeeDeductionLimitCollection employeeDeductionLimits) {
    this.employeeDeductionLimits = employeeDeductionLimits;
  }

  public EmployeeDeduction lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeDeduction employeeDeduction = (EmployeeDeduction) o;
    return Objects.equals(this.deduction, employeeDeduction.deduction) &&
        Objects.equals(this.effectiveStart, employeeDeduction.effectiveStart) &&
        Objects.equals(this.effectiveEnd, employeeDeduction.effectiveEnd) &&
        Objects.equals(this.electionStartPayPeriodStartDate, employeeDeduction.electionStartPayPeriodStartDate) &&
        Objects.equals(this.electionStartPayGroup, employeeDeduction.electionStartPayGroup) &&
        Objects.equals(this.electionSchedule, employeeDeduction.electionSchedule) &&
        Objects.equals(this.isBlocked, employeeDeduction.isBlocked) &&
        Objects.equals(this.position, employeeDeduction.position) &&
        Objects.equals(this.location, employeeDeduction.location) &&
        Objects.equals(this.continuePaymentOnStatutoryPay, employeeDeduction.continuePaymentOnStatutoryPay) &&
        Objects.equals(this.isOptOut, employeeDeduction.isOptOut) &&
        Objects.equals(this.employeeDeductionParameters, employeeDeduction.employeeDeductionParameters) &&
        Objects.equals(this.employeeDeductionLimits, employeeDeduction.employeeDeductionLimits) &&
        Objects.equals(this.lastModifiedTimestamp, employeeDeduction.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deduction, effectiveStart, effectiveEnd, electionStartPayPeriodStartDate, electionStartPayGroup, electionSchedule, isBlocked, position, location, continuePaymentOnStatutoryPay, isOptOut, employeeDeductionParameters, employeeDeductionLimits, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeDeduction {\n");
    
    sb.append("    deduction: ").append(toIndentedString(deduction)).append("\n");
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    electionStartPayPeriodStartDate: ").append(toIndentedString(electionStartPayPeriodStartDate)).append("\n");
    sb.append("    electionStartPayGroup: ").append(toIndentedString(electionStartPayGroup)).append("\n");
    sb.append("    electionSchedule: ").append(toIndentedString(electionSchedule)).append("\n");
    sb.append("    isBlocked: ").append(toIndentedString(isBlocked)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    continuePaymentOnStatutoryPay: ").append(toIndentedString(continuePaymentOnStatutoryPay)).append("\n");
    sb.append("    isOptOut: ").append(toIndentedString(isOptOut)).append("\n");
    sb.append("    employeeDeductionParameters: ").append(toIndentedString(employeeDeductionParameters)).append("\n");
    sb.append("    employeeDeductionLimits: ").append(toIndentedString(employeeDeductionLimits)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

