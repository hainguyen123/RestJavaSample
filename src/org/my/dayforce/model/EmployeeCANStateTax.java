/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.State;

/**
 * EmployeeCANStateTax
 */

public class EmployeeCANStateTax {
  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("State")
  private State state = null;

  @SerializedName("TotalClaimAmount")
  private Double totalClaimAmount = null;

  @SerializedName("PrescribedAreaDeduction")
  private Double prescribedAreaDeduction = null;

  @SerializedName("MaintenanceDeduction")
  private Double maintenanceDeduction = null;

  @SerializedName("AuthorizedTaxCredits")
  private Double authorizedTaxCredits = null;

  @SerializedName("QuebecDevelopmentFunds")
  private Double quebecDevelopmentFunds = null;

  @SerializedName("EstimatedExpense")
  private Double estimatedExpense = null;

  @SerializedName("EstimatedRemuneration")
  private Double estimatedRemuneration = null;

  @SerializedName("AdditionalAmount")
  private Double additionalAmount = null;

  @SerializedName("LabourSponsoredFunds")
  private Double labourSponsoredFunds = null;

  @SerializedName("HasQuebecHealthContributionExemption")
  private Boolean hasQuebecHealthContributionExemption = null;

  @SerializedName("IncomeLessThanClaim")
  private Boolean incomeLessThanClaim = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeCANStateTax effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeCANStateTax effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeCANStateTax state(State state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
 
  public State getState() {
    return state;
  }

  public void setState(State state) {
    this.state = state;
  }

  public EmployeeCANStateTax totalClaimAmount(Double totalClaimAmount) {
    this.totalClaimAmount = totalClaimAmount;
    return this;
  }

   /**
   * Get totalClaimAmount
   * @return totalClaimAmount
  **/
 
  public Double getTotalClaimAmount() {
    return totalClaimAmount;
  }

  public void setTotalClaimAmount(Double totalClaimAmount) {
    this.totalClaimAmount = totalClaimAmount;
  }

  public EmployeeCANStateTax prescribedAreaDeduction(Double prescribedAreaDeduction) {
    this.prescribedAreaDeduction = prescribedAreaDeduction;
    return this;
  }

   /**
   * Get prescribedAreaDeduction
   * @return prescribedAreaDeduction
  **/
 
  public Double getPrescribedAreaDeduction() {
    return prescribedAreaDeduction;
  }

  public void setPrescribedAreaDeduction(Double prescribedAreaDeduction) {
    this.prescribedAreaDeduction = prescribedAreaDeduction;
  }

  public EmployeeCANStateTax maintenanceDeduction(Double maintenanceDeduction) {
    this.maintenanceDeduction = maintenanceDeduction;
    return this;
  }

   /**
   * Get maintenanceDeduction
   * @return maintenanceDeduction
  **/
 
  public Double getMaintenanceDeduction() {
    return maintenanceDeduction;
  }

  public void setMaintenanceDeduction(Double maintenanceDeduction) {
    this.maintenanceDeduction = maintenanceDeduction;
  }

  public EmployeeCANStateTax authorizedTaxCredits(Double authorizedTaxCredits) {
    this.authorizedTaxCredits = authorizedTaxCredits;
    return this;
  }

   /**
   * Get authorizedTaxCredits
   * @return authorizedTaxCredits
  **/
 
  public Double getAuthorizedTaxCredits() {
    return authorizedTaxCredits;
  }

  public void setAuthorizedTaxCredits(Double authorizedTaxCredits) {
    this.authorizedTaxCredits = authorizedTaxCredits;
  }

  public EmployeeCANStateTax quebecDevelopmentFunds(Double quebecDevelopmentFunds) {
    this.quebecDevelopmentFunds = quebecDevelopmentFunds;
    return this;
  }

   /**
   * Get quebecDevelopmentFunds
   * @return quebecDevelopmentFunds
  **/
 
  public Double getQuebecDevelopmentFunds() {
    return quebecDevelopmentFunds;
  }

  public void setQuebecDevelopmentFunds(Double quebecDevelopmentFunds) {
    this.quebecDevelopmentFunds = quebecDevelopmentFunds;
  }

  public EmployeeCANStateTax estimatedExpense(Double estimatedExpense) {
    this.estimatedExpense = estimatedExpense;
    return this;
  }

   /**
   * Get estimatedExpense
   * @return estimatedExpense
  **/
 
  public Double getEstimatedExpense() {
    return estimatedExpense;
  }

  public void setEstimatedExpense(Double estimatedExpense) {
    this.estimatedExpense = estimatedExpense;
  }

  public EmployeeCANStateTax estimatedRemuneration(Double estimatedRemuneration) {
    this.estimatedRemuneration = estimatedRemuneration;
    return this;
  }

   /**
   * Get estimatedRemuneration
   * @return estimatedRemuneration
  **/
 
  public Double getEstimatedRemuneration() {
    return estimatedRemuneration;
  }

  public void setEstimatedRemuneration(Double estimatedRemuneration) {
    this.estimatedRemuneration = estimatedRemuneration;
  }

  public EmployeeCANStateTax additionalAmount(Double additionalAmount) {
    this.additionalAmount = additionalAmount;
    return this;
  }

   /**
   * Get additionalAmount
   * @return additionalAmount
  **/
 
  public Double getAdditionalAmount() {
    return additionalAmount;
  }

  public void setAdditionalAmount(Double additionalAmount) {
    this.additionalAmount = additionalAmount;
  }

  public EmployeeCANStateTax labourSponsoredFunds(Double labourSponsoredFunds) {
    this.labourSponsoredFunds = labourSponsoredFunds;
    return this;
  }

   /**
   * Get labourSponsoredFunds
   * @return labourSponsoredFunds
  **/
 
  public Double getLabourSponsoredFunds() {
    return labourSponsoredFunds;
  }

  public void setLabourSponsoredFunds(Double labourSponsoredFunds) {
    this.labourSponsoredFunds = labourSponsoredFunds;
  }

  public EmployeeCANStateTax hasQuebecHealthContributionExemption(Boolean hasQuebecHealthContributionExemption) {
    this.hasQuebecHealthContributionExemption = hasQuebecHealthContributionExemption;
    return this;
  }

   /**
   * Get hasQuebecHealthContributionExemption
   * @return hasQuebecHealthContributionExemption
  **/
 
  public Boolean getHasQuebecHealthContributionExemption() {
    return hasQuebecHealthContributionExemption;
  }

  public void setHasQuebecHealthContributionExemption(Boolean hasQuebecHealthContributionExemption) {
    this.hasQuebecHealthContributionExemption = hasQuebecHealthContributionExemption;
  }

  public EmployeeCANStateTax incomeLessThanClaim(Boolean incomeLessThanClaim) {
    this.incomeLessThanClaim = incomeLessThanClaim;
    return this;
  }

   /**
   * Get incomeLessThanClaim
   * @return incomeLessThanClaim
  **/
 
  public Boolean getIncomeLessThanClaim() {
    return incomeLessThanClaim;
  }

  public void setIncomeLessThanClaim(Boolean incomeLessThanClaim) {
    this.incomeLessThanClaim = incomeLessThanClaim;
  }

  public EmployeeCANStateTax lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeCANStateTax employeeCANStateTax = (EmployeeCANStateTax) o;
    return Objects.equals(this.effectiveStart, employeeCANStateTax.effectiveStart) &&
        Objects.equals(this.effectiveEnd, employeeCANStateTax.effectiveEnd) &&
        Objects.equals(this.state, employeeCANStateTax.state) &&
        Objects.equals(this.totalClaimAmount, employeeCANStateTax.totalClaimAmount) &&
        Objects.equals(this.prescribedAreaDeduction, employeeCANStateTax.prescribedAreaDeduction) &&
        Objects.equals(this.maintenanceDeduction, employeeCANStateTax.maintenanceDeduction) &&
        Objects.equals(this.authorizedTaxCredits, employeeCANStateTax.authorizedTaxCredits) &&
        Objects.equals(this.quebecDevelopmentFunds, employeeCANStateTax.quebecDevelopmentFunds) &&
        Objects.equals(this.estimatedExpense, employeeCANStateTax.estimatedExpense) &&
        Objects.equals(this.estimatedRemuneration, employeeCANStateTax.estimatedRemuneration) &&
        Objects.equals(this.additionalAmount, employeeCANStateTax.additionalAmount) &&
        Objects.equals(this.labourSponsoredFunds, employeeCANStateTax.labourSponsoredFunds) &&
        Objects.equals(this.hasQuebecHealthContributionExemption, employeeCANStateTax.hasQuebecHealthContributionExemption) &&
        Objects.equals(this.incomeLessThanClaim, employeeCANStateTax.incomeLessThanClaim) &&
        Objects.equals(this.lastModifiedTimestamp, employeeCANStateTax.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveStart, effectiveEnd, state, totalClaimAmount, prescribedAreaDeduction, maintenanceDeduction, authorizedTaxCredits, quebecDevelopmentFunds, estimatedExpense, estimatedRemuneration, additionalAmount, labourSponsoredFunds, hasQuebecHealthContributionExemption, incomeLessThanClaim, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeCANStateTax {\n");
    
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    totalClaimAmount: ").append(toIndentedString(totalClaimAmount)).append("\n");
    sb.append("    prescribedAreaDeduction: ").append(toIndentedString(prescribedAreaDeduction)).append("\n");
    sb.append("    maintenanceDeduction: ").append(toIndentedString(maintenanceDeduction)).append("\n");
    sb.append("    authorizedTaxCredits: ").append(toIndentedString(authorizedTaxCredits)).append("\n");
    sb.append("    quebecDevelopmentFunds: ").append(toIndentedString(quebecDevelopmentFunds)).append("\n");
    sb.append("    estimatedExpense: ").append(toIndentedString(estimatedExpense)).append("\n");
    sb.append("    estimatedRemuneration: ").append(toIndentedString(estimatedRemuneration)).append("\n");
    sb.append("    additionalAmount: ").append(toIndentedString(additionalAmount)).append("\n");
    sb.append("    labourSponsoredFunds: ").append(toIndentedString(labourSponsoredFunds)).append("\n");
    sb.append("    hasQuebecHealthContributionExemption: ").append(toIndentedString(hasQuebecHealthContributionExemption)).append("\n");
    sb.append("    incomeLessThanClaim: ").append(toIndentedString(incomeLessThanClaim)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

