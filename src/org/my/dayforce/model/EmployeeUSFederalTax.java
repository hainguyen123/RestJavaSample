/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.FederalFilingStatus;

/**
 * EmployeeUSFederalTax
 */

public class EmployeeUSFederalTax {
  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("FilingStatus")
  private FederalFilingStatus filingStatus = null;

  @SerializedName("Allowances")
  private Integer allowances = null;

  @SerializedName("AdditionalAmount")
  private Double additionalAmount = null;

  @SerializedName("IsTaxExempt")
  private Boolean isTaxExempt = null;

  @SerializedName("IsLocked")
  private Boolean isLocked = null;

  @SerializedName("TwoJobs")
  private Boolean twoJobs = null;

  @SerializedName("DependentTaxCredit")
  private Double dependentTaxCredit = null;

  @SerializedName("OtherIncome")
  private Double otherIncome = null;

  @SerializedName("Deductions")
  private Double deductions = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeUSFederalTax effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeUSFederalTax effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeUSFederalTax filingStatus(FederalFilingStatus filingStatus) {
    this.filingStatus = filingStatus;
    return this;
  }

   /**
   * Get filingStatus
   * @return filingStatus
  **/
 
  public FederalFilingStatus getFilingStatus() {
    return filingStatus;
  }

  public void setFilingStatus(FederalFilingStatus filingStatus) {
    this.filingStatus = filingStatus;
  }

  public EmployeeUSFederalTax allowances(Integer allowances) {
    this.allowances = allowances;
    return this;
  }

   /**
   * Get allowances
   * @return allowances
  **/
 
  public Integer getAllowances() {
    return allowances;
  }

  public void setAllowances(Integer allowances) {
    this.allowances = allowances;
  }

  public EmployeeUSFederalTax additionalAmount(Double additionalAmount) {
    this.additionalAmount = additionalAmount;
    return this;
  }

   /**
   * Get additionalAmount
   * @return additionalAmount
  **/
 
  public Double getAdditionalAmount() {
    return additionalAmount;
  }

  public void setAdditionalAmount(Double additionalAmount) {
    this.additionalAmount = additionalAmount;
  }

  public EmployeeUSFederalTax isTaxExempt(Boolean isTaxExempt) {
    this.isTaxExempt = isTaxExempt;
    return this;
  }

   /**
   * Get isTaxExempt
   * @return isTaxExempt
  **/
 
  public Boolean getIsTaxExempt() {
    return isTaxExempt;
  }

  public void setIsTaxExempt(Boolean isTaxExempt) {
    this.isTaxExempt = isTaxExempt;
  }

  public EmployeeUSFederalTax isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
   * Get isLocked
   * @return isLocked
  **/
 
  public Boolean getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public EmployeeUSFederalTax twoJobs(Boolean twoJobs) {
    this.twoJobs = twoJobs;
    return this;
  }

   /**
   * Get twoJobs
   * @return twoJobs
  **/
 
  public Boolean getTwoJobs() {
    return twoJobs;
  }

  public void setTwoJobs(Boolean twoJobs) {
    this.twoJobs = twoJobs;
  }

  public EmployeeUSFederalTax dependentTaxCredit(Double dependentTaxCredit) {
    this.dependentTaxCredit = dependentTaxCredit;
    return this;
  }

   /**
   * Get dependentTaxCredit
   * @return dependentTaxCredit
  **/
 
  public Double getDependentTaxCredit() {
    return dependentTaxCredit;
  }

  public void setDependentTaxCredit(Double dependentTaxCredit) {
    this.dependentTaxCredit = dependentTaxCredit;
  }

  public EmployeeUSFederalTax otherIncome(Double otherIncome) {
    this.otherIncome = otherIncome;
    return this;
  }

   /**
   * Get otherIncome
   * @return otherIncome
  **/
 
  public Double getOtherIncome() {
    return otherIncome;
  }

  public void setOtherIncome(Double otherIncome) {
    this.otherIncome = otherIncome;
  }

  public EmployeeUSFederalTax deductions(Double deductions) {
    this.deductions = deductions;
    return this;
  }

   /**
   * Get deductions
   * @return deductions
  **/
 
  public Double getDeductions() {
    return deductions;
  }

  public void setDeductions(Double deductions) {
    this.deductions = deductions;
  }

  public EmployeeUSFederalTax lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeUSFederalTax employeeUSFederalTax = (EmployeeUSFederalTax) o;
    return Objects.equals(this.effectiveStart, employeeUSFederalTax.effectiveStart) &&
        Objects.equals(this.effectiveEnd, employeeUSFederalTax.effectiveEnd) &&
        Objects.equals(this.filingStatus, employeeUSFederalTax.filingStatus) &&
        Objects.equals(this.allowances, employeeUSFederalTax.allowances) &&
        Objects.equals(this.additionalAmount, employeeUSFederalTax.additionalAmount) &&
        Objects.equals(this.isTaxExempt, employeeUSFederalTax.isTaxExempt) &&
        Objects.equals(this.isLocked, employeeUSFederalTax.isLocked) &&
        Objects.equals(this.twoJobs, employeeUSFederalTax.twoJobs) &&
        Objects.equals(this.dependentTaxCredit, employeeUSFederalTax.dependentTaxCredit) &&
        Objects.equals(this.otherIncome, employeeUSFederalTax.otherIncome) &&
        Objects.equals(this.deductions, employeeUSFederalTax.deductions) &&
        Objects.equals(this.lastModifiedTimestamp, employeeUSFederalTax.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveStart, effectiveEnd, filingStatus, allowances, additionalAmount, isTaxExempt, isLocked, twoJobs, dependentTaxCredit, otherIncome, deductions, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeUSFederalTax {\n");
    
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    filingStatus: ").append(toIndentedString(filingStatus)).append("\n");
    sb.append("    allowances: ").append(toIndentedString(allowances)).append("\n");
    sb.append("    additionalAmount: ").append(toIndentedString(additionalAmount)).append("\n");
    sb.append("    isTaxExempt: ").append(toIndentedString(isTaxExempt)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    twoJobs: ").append(toIndentedString(twoJobs)).append("\n");
    sb.append("    dependentTaxCredit: ").append(toIndentedString(dependentTaxCredit)).append("\n");
    sb.append("    otherIncome: ").append(toIndentedString(otherIncome)).append("\n");
    sb.append("    deductions: ").append(toIndentedString(deductions)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

