/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import java.util.UUID;
import org.joda.time.DateTime;

/**
 * ArchiveDocument
 */

public class ArchiveDocument {
  @SerializedName("DocumentType")
  private String documentType = null;

  @SerializedName("DocumentGroup")
  private String documentGroup = null;

  @SerializedName("UserId")
  private Integer userId = null;

  @SerializedName("SourceReportUniqueId")
  private UUID sourceReportUniqueId = null;

  @SerializedName("PublishDateTime")
  private DateTime publishDateTime = null;

  @SerializedName("Title")
  private String title = null;

  @SerializedName("PageCount")
  private Integer pageCount = null;

  @SerializedName("CultureId")
  private Integer cultureId = null;

  @SerializedName("Contents")
  private byte[] contents = null;

  @SerializedName("FileName")
  private String fileName = null;

  @SerializedName("SizeBytes")
  private Long sizeBytes = null;

  public ArchiveDocument documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
 
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }

  public ArchiveDocument documentGroup(String documentGroup) {
    this.documentGroup = documentGroup;
    return this;
  }

   /**
   * Get documentGroup
   * @return documentGroup
  **/
 
  public String getDocumentGroup() {
    return documentGroup;
  }

  public void setDocumentGroup(String documentGroup) {
    this.documentGroup = documentGroup;
  }

  public ArchiveDocument userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
 
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public ArchiveDocument sourceReportUniqueId(UUID sourceReportUniqueId) {
    this.sourceReportUniqueId = sourceReportUniqueId;
    return this;
  }

   /**
   * Get sourceReportUniqueId
   * @return sourceReportUniqueId
  **/
 
  public UUID getSourceReportUniqueId() {
    return sourceReportUniqueId;
  }

  public void setSourceReportUniqueId(UUID sourceReportUniqueId) {
    this.sourceReportUniqueId = sourceReportUniqueId;
  }

  public ArchiveDocument publishDateTime(DateTime publishDateTime) {
    this.publishDateTime = publishDateTime;
    return this;
  }

   /**
   * Get publishDateTime
   * @return publishDateTime
  **/
 
  public DateTime getPublishDateTime() {
    return publishDateTime;
  }

  public void setPublishDateTime(DateTime publishDateTime) {
    this.publishDateTime = publishDateTime;
  }

  public ArchiveDocument title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
 
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ArchiveDocument pageCount(Integer pageCount) {
    this.pageCount = pageCount;
    return this;
  }

   /**
   * Get pageCount
   * @return pageCount
  **/
 
  public Integer getPageCount() {
    return pageCount;
  }

  public void setPageCount(Integer pageCount) {
    this.pageCount = pageCount;
  }

  public ArchiveDocument cultureId(Integer cultureId) {
    this.cultureId = cultureId;
    return this;
  }

   /**
   * Get cultureId
   * @return cultureId
  **/
 
  public Integer getCultureId() {
    return cultureId;
  }

  public void setCultureId(Integer cultureId) {
    this.cultureId = cultureId;
  }

  public ArchiveDocument contents(byte[] contents) {
    this.contents = contents;
    return this;
  }

   /**
   * Get contents
   * @return contents
  **/
 
  public byte[] getContents() {
    return contents;
  }

  public void setContents(byte[] contents) {
    this.contents = contents;
  }

  public ArchiveDocument fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
 
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public ArchiveDocument sizeBytes(Long sizeBytes) {
    this.sizeBytes = sizeBytes;
    return this;
  }

   /**
   * Get sizeBytes
   * @return sizeBytes
  **/
 
  public Long getSizeBytes() {
    return sizeBytes;
  }

  public void setSizeBytes(Long sizeBytes) {
    this.sizeBytes = sizeBytes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArchiveDocument archiveDocument = (ArchiveDocument) o;
    return Objects.equals(this.documentType, archiveDocument.documentType) &&
        Objects.equals(this.documentGroup, archiveDocument.documentGroup) &&
        Objects.equals(this.userId, archiveDocument.userId) &&
        Objects.equals(this.sourceReportUniqueId, archiveDocument.sourceReportUniqueId) &&
        Objects.equals(this.publishDateTime, archiveDocument.publishDateTime) &&
        Objects.equals(this.title, archiveDocument.title) &&
        Objects.equals(this.pageCount, archiveDocument.pageCount) &&
        Objects.equals(this.cultureId, archiveDocument.cultureId) &&
        Objects.equals(this.contents, archiveDocument.contents) &&
        Objects.equals(this.fileName, archiveDocument.fileName) &&
        Objects.equals(this.sizeBytes, archiveDocument.sizeBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentType, documentGroup, userId, sourceReportUniqueId, publishDateTime, title, pageCount, cultureId, contents, fileName, sizeBytes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArchiveDocument {\n");
    
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    documentGroup: ").append(toIndentedString(documentGroup)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    sourceReportUniqueId: ").append(toIndentedString(sourceReportUniqueId)).append("\n");
    sb.append("    publishDateTime: ").append(toIndentedString(publishDateTime)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    cultureId: ").append(toIndentedString(cultureId)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    sizeBytes: ").append(toIndentedString(sizeBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

