/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.Location;
import org.my.dayforce.model.Position;

/**
 * EmployeeWorkAssignmentManager
 */

public class EmployeeWorkAssignmentManager {
  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("TerminationDate")
  private DateTime terminationDate = null;

  @SerializedName("EmploymentStatusGroupXRefCode")
  private String employmentStatusGroupXRefCode = null;

  @SerializedName("ManagerXRefCode")
  private String managerXRefCode = null;

  @SerializedName("ManagerName")
  private String managerName = null;

  @SerializedName("ActiveEmployeePosition")
  private Position activeEmployeePosition = null;

  @SerializedName("ActiveEmployeeLocation")
  private Location activeEmployeeLocation = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeWorkAssignmentManager effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeWorkAssignmentManager effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeWorkAssignmentManager terminationDate(DateTime terminationDate) {
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * Get terminationDate
   * @return terminationDate
  **/
 
  public DateTime getTerminationDate() {
    return terminationDate;
  }

  public void setTerminationDate(DateTime terminationDate) {
    this.terminationDate = terminationDate;
  }

  public EmployeeWorkAssignmentManager employmentStatusGroupXRefCode(String employmentStatusGroupXRefCode) {
    this.employmentStatusGroupXRefCode = employmentStatusGroupXRefCode;
    return this;
  }

   /**
   * Get employmentStatusGroupXRefCode
   * @return employmentStatusGroupXRefCode
  **/
 
  public String getEmploymentStatusGroupXRefCode() {
    return employmentStatusGroupXRefCode;
  }

  public void setEmploymentStatusGroupXRefCode(String employmentStatusGroupXRefCode) {
    this.employmentStatusGroupXRefCode = employmentStatusGroupXRefCode;
  }

  public EmployeeWorkAssignmentManager managerXRefCode(String managerXRefCode) {
    this.managerXRefCode = managerXRefCode;
    return this;
  }

   /**
   * Get managerXRefCode
   * @return managerXRefCode
  **/
 
  public String getManagerXRefCode() {
    return managerXRefCode;
  }

  public void setManagerXRefCode(String managerXRefCode) {
    this.managerXRefCode = managerXRefCode;
  }

  public EmployeeWorkAssignmentManager managerName(String managerName) {
    this.managerName = managerName;
    return this;
  }

   /**
   * Get managerName
   * @return managerName
  **/
 
  public String getManagerName() {
    return managerName;
  }

  public void setManagerName(String managerName) {
    this.managerName = managerName;
  }

  public EmployeeWorkAssignmentManager activeEmployeePosition(Position activeEmployeePosition) {
    this.activeEmployeePosition = activeEmployeePosition;
    return this;
  }

   /**
   * Get activeEmployeePosition
   * @return activeEmployeePosition
  **/
 
  public Position getActiveEmployeePosition() {
    return activeEmployeePosition;
  }

  public void setActiveEmployeePosition(Position activeEmployeePosition) {
    this.activeEmployeePosition = activeEmployeePosition;
  }

  public EmployeeWorkAssignmentManager activeEmployeeLocation(Location activeEmployeeLocation) {
    this.activeEmployeeLocation = activeEmployeeLocation;
    return this;
  }

   /**
   * Get activeEmployeeLocation
   * @return activeEmployeeLocation
  **/
 
  public Location getActiveEmployeeLocation() {
    return activeEmployeeLocation;
  }

  public void setActiveEmployeeLocation(Location activeEmployeeLocation) {
    this.activeEmployeeLocation = activeEmployeeLocation;
  }

  public EmployeeWorkAssignmentManager lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeWorkAssignmentManager employeeWorkAssignmentManager = (EmployeeWorkAssignmentManager) o;
    return Objects.equals(this.effectiveStart, employeeWorkAssignmentManager.effectiveStart) &&
        Objects.equals(this.effectiveEnd, employeeWorkAssignmentManager.effectiveEnd) &&
        Objects.equals(this.terminationDate, employeeWorkAssignmentManager.terminationDate) &&
        Objects.equals(this.employmentStatusGroupXRefCode, employeeWorkAssignmentManager.employmentStatusGroupXRefCode) &&
        Objects.equals(this.managerXRefCode, employeeWorkAssignmentManager.managerXRefCode) &&
        Objects.equals(this.managerName, employeeWorkAssignmentManager.managerName) &&
        Objects.equals(this.activeEmployeePosition, employeeWorkAssignmentManager.activeEmployeePosition) &&
        Objects.equals(this.activeEmployeeLocation, employeeWorkAssignmentManager.activeEmployeeLocation) &&
        Objects.equals(this.lastModifiedTimestamp, employeeWorkAssignmentManager.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveStart, effectiveEnd, terminationDate, employmentStatusGroupXRefCode, managerXRefCode, managerName, activeEmployeePosition, activeEmployeeLocation, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeWorkAssignmentManager {\n");
    
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    employmentStatusGroupXRefCode: ").append(toIndentedString(employmentStatusGroupXRefCode)).append("\n");
    sb.append("    managerXRefCode: ").append(toIndentedString(managerXRefCode)).append("\n");
    sb.append("    managerName: ").append(toIndentedString(managerName)).append("\n");
    sb.append("    activeEmployeePosition: ").append(toIndentedString(activeEmployeePosition)).append("\n");
    sb.append("    activeEmployeeLocation: ").append(toIndentedString(activeEmployeeLocation)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

