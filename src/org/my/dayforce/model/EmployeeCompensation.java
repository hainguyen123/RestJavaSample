/*
 * Dayforce API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.my.dayforce.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;


import org.joda.time.DateTime;
import org.my.dayforce.model.EmploymentStatusReason;
import org.my.dayforce.model.JobStepPolicy;
import org.my.dayforce.model.PayClass;
import org.my.dayforce.model.PayGrade;
import org.my.dayforce.model.PayGroup;
import org.my.dayforce.model.PayPolicy;
import org.my.dayforce.model.PayType;

/**
 * EmployeeCompensation
 */

public class EmployeeCompensation {
  @SerializedName("EmployeeNumber")
  private String employeeNumber = null;

  @SerializedName("EffectiveEnd")
  private DateTime effectiveEnd = null;

  @SerializedName("EffectiveStart")
  private DateTime effectiveStart = null;

  @SerializedName("PayGrade")
  private PayGrade payGrade = null;

  @SerializedName("PayType")
  private PayType payType = null;

  @SerializedName("PayGroup")
  private PayGroup payGroup = null;

  @SerializedName("PayClass")
  private PayClass payClass = null;

  @SerializedName("EmploymentStatusReason")
  private EmploymentStatusReason employmentStatusReason = null;

  @SerializedName("AlternateRate")
  private Double alternateRate = null;

  @SerializedName("AverageDailyHours")
  private Double averageDailyHours = null;

  @SerializedName("AverageOvertimeRate")
  private Double averageOvertimeRate = null;

  @SerializedName("BaseRate")
  private Double baseRate = null;

  @SerializedName("BaseRateManuallySet")
  private Boolean baseRateManuallySet = null;

  @SerializedName("BaseSalary")
  private Double baseSalary = null;

  @SerializedName("DailyRate")
  private Double dailyRate = null;

  @SerializedName("NormalWeeklyHours")
  private Double normalWeeklyHours = null;

  @SerializedName("NormalSemiMonthlyHoursTop")
  private Double normalSemiMonthlyHoursTop = null;

  @SerializedName("NormalSemiMonthlyHoursBottom")
  private Double normalSemiMonthlyHoursBottom = null;

  @SerializedName("LastPayEditDate")
  private DateTime lastPayEditDate = null;

  @SerializedName("VacationRate")
  private Double vacationRate = null;

  @SerializedName("MinimumRate")
  private Double minimumRate = null;

  @SerializedName("ControlRate")
  private Double controlRate = null;

  @SerializedName("MaximumRate")
  private Double maximumRate = null;

  @SerializedName("RateMidPoint")
  private Double rateMidPoint = null;

  @SerializedName("MinimumSalary")
  private Double minimumSalary = null;

  @SerializedName("ControlSalary")
  private Double controlSalary = null;

  @SerializedName("MaximumSalary")
  private Double maximumSalary = null;

  @SerializedName("SalaryMidPoint")
  private Double salaryMidPoint = null;

  @SerializedName("CompRatio")
  private Double compRatio = null;

  @SerializedName("ChangePercent")
  private Double changePercent = null;

  @SerializedName("ChangeValue")
  private Double changeValue = null;

  @SerializedName("PreviousBaseSalary")
  private Double previousBaseSalary = null;

  @SerializedName("PreviousBaseRate")
  private Double previousBaseRate = null;

  @SerializedName("PayPolicy")
  private PayPolicy payPolicy = null;

  @SerializedName("RatePolicy")
  private JobStepPolicy ratePolicy = null;

  @SerializedName("LastModifiedTimestamp")
  private DateTime lastModifiedTimestamp = null;

  public EmployeeCompensation employeeNumber(String employeeNumber) {
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
 
  public String getEmployeeNumber() {
    return employeeNumber;
  }

  public void setEmployeeNumber(String employeeNumber) {
    this.employeeNumber = employeeNumber;
  }

  public EmployeeCompensation effectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
    return this;
  }

   /**
   * Get effectiveEnd
   * @return effectiveEnd
  **/
 
  public DateTime getEffectiveEnd() {
    return effectiveEnd;
  }

  public void setEffectiveEnd(DateTime effectiveEnd) {
    this.effectiveEnd = effectiveEnd;
  }

  public EmployeeCompensation effectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
    return this;
  }

   /**
   * Get effectiveStart
   * @return effectiveStart
  **/
 
  public DateTime getEffectiveStart() {
    return effectiveStart;
  }

  public void setEffectiveStart(DateTime effectiveStart) {
    this.effectiveStart = effectiveStart;
  }

  public EmployeeCompensation payGrade(PayGrade payGrade) {
    this.payGrade = payGrade;
    return this;
  }

   /**
   * Get payGrade
   * @return payGrade
  **/
 
  public PayGrade getPayGrade() {
    return payGrade;
  }

  public void setPayGrade(PayGrade payGrade) {
    this.payGrade = payGrade;
  }

  public EmployeeCompensation payType(PayType payType) {
    this.payType = payType;
    return this;
  }

   /**
   * Get payType
   * @return payType
  **/
 
  public PayType getPayType() {
    return payType;
  }

  public void setPayType(PayType payType) {
    this.payType = payType;
  }

  public EmployeeCompensation payGroup(PayGroup payGroup) {
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
 
  public PayGroup getPayGroup() {
    return payGroup;
  }

  public void setPayGroup(PayGroup payGroup) {
    this.payGroup = payGroup;
  }

  public EmployeeCompensation payClass(PayClass payClass) {
    this.payClass = payClass;
    return this;
  }

   /**
   * Get payClass
   * @return payClass
  **/
 
  public PayClass getPayClass() {
    return payClass;
  }

  public void setPayClass(PayClass payClass) {
    this.payClass = payClass;
  }

  public EmployeeCompensation employmentStatusReason(EmploymentStatusReason employmentStatusReason) {
    this.employmentStatusReason = employmentStatusReason;
    return this;
  }

   /**
   * Get employmentStatusReason
   * @return employmentStatusReason
  **/
 
  public EmploymentStatusReason getEmploymentStatusReason() {
    return employmentStatusReason;
  }

  public void setEmploymentStatusReason(EmploymentStatusReason employmentStatusReason) {
    this.employmentStatusReason = employmentStatusReason;
  }

  public EmployeeCompensation alternateRate(Double alternateRate) {
    this.alternateRate = alternateRate;
    return this;
  }

   /**
   * Get alternateRate
   * @return alternateRate
  **/
 
  public Double getAlternateRate() {
    return alternateRate;
  }

  public void setAlternateRate(Double alternateRate) {
    this.alternateRate = alternateRate;
  }

  public EmployeeCompensation averageDailyHours(Double averageDailyHours) {
    this.averageDailyHours = averageDailyHours;
    return this;
  }

   /**
   * Get averageDailyHours
   * @return averageDailyHours
  **/
 
  public Double getAverageDailyHours() {
    return averageDailyHours;
  }

  public void setAverageDailyHours(Double averageDailyHours) {
    this.averageDailyHours = averageDailyHours;
  }

  public EmployeeCompensation averageOvertimeRate(Double averageOvertimeRate) {
    this.averageOvertimeRate = averageOvertimeRate;
    return this;
  }

   /**
   * Get averageOvertimeRate
   * @return averageOvertimeRate
  **/
 
  public Double getAverageOvertimeRate() {
    return averageOvertimeRate;
  }

  public void setAverageOvertimeRate(Double averageOvertimeRate) {
    this.averageOvertimeRate = averageOvertimeRate;
  }

  public EmployeeCompensation baseRate(Double baseRate) {
    this.baseRate = baseRate;
    return this;
  }

   /**
   * Get baseRate
   * @return baseRate
  **/
 
  public Double getBaseRate() {
    return baseRate;
  }

  public void setBaseRate(Double baseRate) {
    this.baseRate = baseRate;
  }

  public EmployeeCompensation baseRateManuallySet(Boolean baseRateManuallySet) {
    this.baseRateManuallySet = baseRateManuallySet;
    return this;
  }

   /**
   * Get baseRateManuallySet
   * @return baseRateManuallySet
  **/
 
  public Boolean getBaseRateManuallySet() {
    return baseRateManuallySet;
  }

  public void setBaseRateManuallySet(Boolean baseRateManuallySet) {
    this.baseRateManuallySet = baseRateManuallySet;
  }

  public EmployeeCompensation baseSalary(Double baseSalary) {
    this.baseSalary = baseSalary;
    return this;
  }

   /**
   * Get baseSalary
   * @return baseSalary
  **/
 
  public Double getBaseSalary() {
    return baseSalary;
  }

  public void setBaseSalary(Double baseSalary) {
    this.baseSalary = baseSalary;
  }

  public EmployeeCompensation dailyRate(Double dailyRate) {
    this.dailyRate = dailyRate;
    return this;
  }

   /**
   * Get dailyRate
   * @return dailyRate
  **/
 
  public Double getDailyRate() {
    return dailyRate;
  }

  public void setDailyRate(Double dailyRate) {
    this.dailyRate = dailyRate;
  }

  public EmployeeCompensation normalWeeklyHours(Double normalWeeklyHours) {
    this.normalWeeklyHours = normalWeeklyHours;
    return this;
  }

   /**
   * Get normalWeeklyHours
   * @return normalWeeklyHours
  **/
 
  public Double getNormalWeeklyHours() {
    return normalWeeklyHours;
  }

  public void setNormalWeeklyHours(Double normalWeeklyHours) {
    this.normalWeeklyHours = normalWeeklyHours;
  }

  public EmployeeCompensation normalSemiMonthlyHoursTop(Double normalSemiMonthlyHoursTop) {
    this.normalSemiMonthlyHoursTop = normalSemiMonthlyHoursTop;
    return this;
  }

   /**
   * Get normalSemiMonthlyHoursTop
   * @return normalSemiMonthlyHoursTop
  **/
 
  public Double getNormalSemiMonthlyHoursTop() {
    return normalSemiMonthlyHoursTop;
  }

  public void setNormalSemiMonthlyHoursTop(Double normalSemiMonthlyHoursTop) {
    this.normalSemiMonthlyHoursTop = normalSemiMonthlyHoursTop;
  }

  public EmployeeCompensation normalSemiMonthlyHoursBottom(Double normalSemiMonthlyHoursBottom) {
    this.normalSemiMonthlyHoursBottom = normalSemiMonthlyHoursBottom;
    return this;
  }

   /**
   * Get normalSemiMonthlyHoursBottom
   * @return normalSemiMonthlyHoursBottom
  **/
 
  public Double getNormalSemiMonthlyHoursBottom() {
    return normalSemiMonthlyHoursBottom;
  }

  public void setNormalSemiMonthlyHoursBottom(Double normalSemiMonthlyHoursBottom) {
    this.normalSemiMonthlyHoursBottom = normalSemiMonthlyHoursBottom;
  }

  public EmployeeCompensation lastPayEditDate(DateTime lastPayEditDate) {
    this.lastPayEditDate = lastPayEditDate;
    return this;
  }

   /**
   * Get lastPayEditDate
   * @return lastPayEditDate
  **/
 
  public DateTime getLastPayEditDate() {
    return lastPayEditDate;
  }

  public void setLastPayEditDate(DateTime lastPayEditDate) {
    this.lastPayEditDate = lastPayEditDate;
  }

  public EmployeeCompensation vacationRate(Double vacationRate) {
    this.vacationRate = vacationRate;
    return this;
  }

   /**
   * Get vacationRate
   * @return vacationRate
  **/
 
  public Double getVacationRate() {
    return vacationRate;
  }

  public void setVacationRate(Double vacationRate) {
    this.vacationRate = vacationRate;
  }

  public EmployeeCompensation minimumRate(Double minimumRate) {
    this.minimumRate = minimumRate;
    return this;
  }

   /**
   * Get minimumRate
   * @return minimumRate
  **/
 
  public Double getMinimumRate() {
    return minimumRate;
  }

  public void setMinimumRate(Double minimumRate) {
    this.minimumRate = minimumRate;
  }

  public EmployeeCompensation controlRate(Double controlRate) {
    this.controlRate = controlRate;
    return this;
  }

   /**
   * Get controlRate
   * @return controlRate
  **/
 
  public Double getControlRate() {
    return controlRate;
  }

  public void setControlRate(Double controlRate) {
    this.controlRate = controlRate;
  }

  public EmployeeCompensation maximumRate(Double maximumRate) {
    this.maximumRate = maximumRate;
    return this;
  }

   /**
   * Get maximumRate
   * @return maximumRate
  **/
 
  public Double getMaximumRate() {
    return maximumRate;
  }

  public void setMaximumRate(Double maximumRate) {
    this.maximumRate = maximumRate;
  }

  public EmployeeCompensation rateMidPoint(Double rateMidPoint) {
    this.rateMidPoint = rateMidPoint;
    return this;
  }

   /**
   * Get rateMidPoint
   * @return rateMidPoint
  **/
 
  public Double getRateMidPoint() {
    return rateMidPoint;
  }

  public void setRateMidPoint(Double rateMidPoint) {
    this.rateMidPoint = rateMidPoint;
  }

  public EmployeeCompensation minimumSalary(Double minimumSalary) {
    this.minimumSalary = minimumSalary;
    return this;
  }

   /**
   * Get minimumSalary
   * @return minimumSalary
  **/
 
  public Double getMinimumSalary() {
    return minimumSalary;
  }

  public void setMinimumSalary(Double minimumSalary) {
    this.minimumSalary = minimumSalary;
  }

  public EmployeeCompensation controlSalary(Double controlSalary) {
    this.controlSalary = controlSalary;
    return this;
  }

   /**
   * Get controlSalary
   * @return controlSalary
  **/
 
  public Double getControlSalary() {
    return controlSalary;
  }

  public void setControlSalary(Double controlSalary) {
    this.controlSalary = controlSalary;
  }

  public EmployeeCompensation maximumSalary(Double maximumSalary) {
    this.maximumSalary = maximumSalary;
    return this;
  }

   /**
   * Get maximumSalary
   * @return maximumSalary
  **/
 
  public Double getMaximumSalary() {
    return maximumSalary;
  }

  public void setMaximumSalary(Double maximumSalary) {
    this.maximumSalary = maximumSalary;
  }

  public EmployeeCompensation salaryMidPoint(Double salaryMidPoint) {
    this.salaryMidPoint = salaryMidPoint;
    return this;
  }

   /**
   * Get salaryMidPoint
   * @return salaryMidPoint
  **/
 
  public Double getSalaryMidPoint() {
    return salaryMidPoint;
  }

  public void setSalaryMidPoint(Double salaryMidPoint) {
    this.salaryMidPoint = salaryMidPoint;
  }

  public EmployeeCompensation compRatio(Double compRatio) {
    this.compRatio = compRatio;
    return this;
  }

   /**
   * Get compRatio
   * @return compRatio
  **/
 
  public Double getCompRatio() {
    return compRatio;
  }

  public void setCompRatio(Double compRatio) {
    this.compRatio = compRatio;
  }

  public EmployeeCompensation changePercent(Double changePercent) {
    this.changePercent = changePercent;
    return this;
  }

   /**
   * Get changePercent
   * @return changePercent
  **/
 
  public Double getChangePercent() {
    return changePercent;
  }

  public void setChangePercent(Double changePercent) {
    this.changePercent = changePercent;
  }

  public EmployeeCompensation changeValue(Double changeValue) {
    this.changeValue = changeValue;
    return this;
  }

   /**
   * Get changeValue
   * @return changeValue
  **/
 
  public Double getChangeValue() {
    return changeValue;
  }

  public void setChangeValue(Double changeValue) {
    this.changeValue = changeValue;
  }

  public EmployeeCompensation previousBaseSalary(Double previousBaseSalary) {
    this.previousBaseSalary = previousBaseSalary;
    return this;
  }

   /**
   * Get previousBaseSalary
   * @return previousBaseSalary
  **/
 
  public Double getPreviousBaseSalary() {
    return previousBaseSalary;
  }

  public void setPreviousBaseSalary(Double previousBaseSalary) {
    this.previousBaseSalary = previousBaseSalary;
  }

  public EmployeeCompensation previousBaseRate(Double previousBaseRate) {
    this.previousBaseRate = previousBaseRate;
    return this;
  }

   /**
   * Get previousBaseRate
   * @return previousBaseRate
  **/
 
  public Double getPreviousBaseRate() {
    return previousBaseRate;
  }

  public void setPreviousBaseRate(Double previousBaseRate) {
    this.previousBaseRate = previousBaseRate;
  }

  public EmployeeCompensation payPolicy(PayPolicy payPolicy) {
    this.payPolicy = payPolicy;
    return this;
  }

   /**
   * Get payPolicy
   * @return payPolicy
  **/
 
  public PayPolicy getPayPolicy() {
    return payPolicy;
  }

  public void setPayPolicy(PayPolicy payPolicy) {
    this.payPolicy = payPolicy;
  }

  public EmployeeCompensation ratePolicy(JobStepPolicy ratePolicy) {
    this.ratePolicy = ratePolicy;
    return this;
  }

   /**
   * Get ratePolicy
   * @return ratePolicy
  **/
 
  public JobStepPolicy getRatePolicy() {
    return ratePolicy;
  }

  public void setRatePolicy(JobStepPolicy ratePolicy) {
    this.ratePolicy = ratePolicy;
  }

  public EmployeeCompensation lastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * Get lastModifiedTimestamp
   * @return lastModifiedTimestamp
  **/
 
  public DateTime getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }

  public void setLastModifiedTimestamp(DateTime lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeCompensation employeeCompensation = (EmployeeCompensation) o;
    return Objects.equals(this.employeeNumber, employeeCompensation.employeeNumber) &&
        Objects.equals(this.effectiveEnd, employeeCompensation.effectiveEnd) &&
        Objects.equals(this.effectiveStart, employeeCompensation.effectiveStart) &&
        Objects.equals(this.payGrade, employeeCompensation.payGrade) &&
        Objects.equals(this.payType, employeeCompensation.payType) &&
        Objects.equals(this.payGroup, employeeCompensation.payGroup) &&
        Objects.equals(this.payClass, employeeCompensation.payClass) &&
        Objects.equals(this.employmentStatusReason, employeeCompensation.employmentStatusReason) &&
        Objects.equals(this.alternateRate, employeeCompensation.alternateRate) &&
        Objects.equals(this.averageDailyHours, employeeCompensation.averageDailyHours) &&
        Objects.equals(this.averageOvertimeRate, employeeCompensation.averageOvertimeRate) &&
        Objects.equals(this.baseRate, employeeCompensation.baseRate) &&
        Objects.equals(this.baseRateManuallySet, employeeCompensation.baseRateManuallySet) &&
        Objects.equals(this.baseSalary, employeeCompensation.baseSalary) &&
        Objects.equals(this.dailyRate, employeeCompensation.dailyRate) &&
        Objects.equals(this.normalWeeklyHours, employeeCompensation.normalWeeklyHours) &&
        Objects.equals(this.normalSemiMonthlyHoursTop, employeeCompensation.normalSemiMonthlyHoursTop) &&
        Objects.equals(this.normalSemiMonthlyHoursBottom, employeeCompensation.normalSemiMonthlyHoursBottom) &&
        Objects.equals(this.lastPayEditDate, employeeCompensation.lastPayEditDate) &&
        Objects.equals(this.vacationRate, employeeCompensation.vacationRate) &&
        Objects.equals(this.minimumRate, employeeCompensation.minimumRate) &&
        Objects.equals(this.controlRate, employeeCompensation.controlRate) &&
        Objects.equals(this.maximumRate, employeeCompensation.maximumRate) &&
        Objects.equals(this.rateMidPoint, employeeCompensation.rateMidPoint) &&
        Objects.equals(this.minimumSalary, employeeCompensation.minimumSalary) &&
        Objects.equals(this.controlSalary, employeeCompensation.controlSalary) &&
        Objects.equals(this.maximumSalary, employeeCompensation.maximumSalary) &&
        Objects.equals(this.salaryMidPoint, employeeCompensation.salaryMidPoint) &&
        Objects.equals(this.compRatio, employeeCompensation.compRatio) &&
        Objects.equals(this.changePercent, employeeCompensation.changePercent) &&
        Objects.equals(this.changeValue, employeeCompensation.changeValue) &&
        Objects.equals(this.previousBaseSalary, employeeCompensation.previousBaseSalary) &&
        Objects.equals(this.previousBaseRate, employeeCompensation.previousBaseRate) &&
        Objects.equals(this.payPolicy, employeeCompensation.payPolicy) &&
        Objects.equals(this.ratePolicy, employeeCompensation.ratePolicy) &&
        Objects.equals(this.lastModifiedTimestamp, employeeCompensation.lastModifiedTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeNumber, effectiveEnd, effectiveStart, payGrade, payType, payGroup, payClass, employmentStatusReason, alternateRate, averageDailyHours, averageOvertimeRate, baseRate, baseRateManuallySet, baseSalary, dailyRate, normalWeeklyHours, normalSemiMonthlyHoursTop, normalSemiMonthlyHoursBottom, lastPayEditDate, vacationRate, minimumRate, controlRate, maximumRate, rateMidPoint, minimumSalary, controlSalary, maximumSalary, salaryMidPoint, compRatio, changePercent, changeValue, previousBaseSalary, previousBaseRate, payPolicy, ratePolicy, lastModifiedTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeCompensation {\n");
    
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    effectiveEnd: ").append(toIndentedString(effectiveEnd)).append("\n");
    sb.append("    effectiveStart: ").append(toIndentedString(effectiveStart)).append("\n");
    sb.append("    payGrade: ").append(toIndentedString(payGrade)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    payClass: ").append(toIndentedString(payClass)).append("\n");
    sb.append("    employmentStatusReason: ").append(toIndentedString(employmentStatusReason)).append("\n");
    sb.append("    alternateRate: ").append(toIndentedString(alternateRate)).append("\n");
    sb.append("    averageDailyHours: ").append(toIndentedString(averageDailyHours)).append("\n");
    sb.append("    averageOvertimeRate: ").append(toIndentedString(averageOvertimeRate)).append("\n");
    sb.append("    baseRate: ").append(toIndentedString(baseRate)).append("\n");
    sb.append("    baseRateManuallySet: ").append(toIndentedString(baseRateManuallySet)).append("\n");
    sb.append("    baseSalary: ").append(toIndentedString(baseSalary)).append("\n");
    sb.append("    dailyRate: ").append(toIndentedString(dailyRate)).append("\n");
    sb.append("    normalWeeklyHours: ").append(toIndentedString(normalWeeklyHours)).append("\n");
    sb.append("    normalSemiMonthlyHoursTop: ").append(toIndentedString(normalSemiMonthlyHoursTop)).append("\n");
    sb.append("    normalSemiMonthlyHoursBottom: ").append(toIndentedString(normalSemiMonthlyHoursBottom)).append("\n");
    sb.append("    lastPayEditDate: ").append(toIndentedString(lastPayEditDate)).append("\n");
    sb.append("    vacationRate: ").append(toIndentedString(vacationRate)).append("\n");
    sb.append("    minimumRate: ").append(toIndentedString(minimumRate)).append("\n");
    sb.append("    controlRate: ").append(toIndentedString(controlRate)).append("\n");
    sb.append("    maximumRate: ").append(toIndentedString(maximumRate)).append("\n");
    sb.append("    rateMidPoint: ").append(toIndentedString(rateMidPoint)).append("\n");
    sb.append("    minimumSalary: ").append(toIndentedString(minimumSalary)).append("\n");
    sb.append("    controlSalary: ").append(toIndentedString(controlSalary)).append("\n");
    sb.append("    maximumSalary: ").append(toIndentedString(maximumSalary)).append("\n");
    sb.append("    salaryMidPoint: ").append(toIndentedString(salaryMidPoint)).append("\n");
    sb.append("    compRatio: ").append(toIndentedString(compRatio)).append("\n");
    sb.append("    changePercent: ").append(toIndentedString(changePercent)).append("\n");
    sb.append("    changeValue: ").append(toIndentedString(changeValue)).append("\n");
    sb.append("    previousBaseSalary: ").append(toIndentedString(previousBaseSalary)).append("\n");
    sb.append("    previousBaseRate: ").append(toIndentedString(previousBaseRate)).append("\n");
    sb.append("    payPolicy: ").append(toIndentedString(payPolicy)).append("\n");
    sb.append("    ratePolicy: ").append(toIndentedString(ratePolicy)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

